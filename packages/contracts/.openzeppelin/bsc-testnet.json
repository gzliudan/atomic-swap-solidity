{
  "manifestVersion": "3.2",
  "proxies": [],
  "impls": {
    "227e50945266f99d88cf9a133cccd43f2c3a9ad7837b7e62feb7133e4c1bb8e4": {
      "address": "0xCFcee3BA005a489Cc61855D067C26c17Ac613f19",
      "txHash": "0x1b195ebc34d586b600ec73747b20558719be0914eac93838143bb642c20f8963",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "swapOrder",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)915_storage)",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:15"
          },
          {
            "label": "bids",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)935_storage))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:16"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:18"
          },
          {
            "label": "sellerFeeRate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:19"
          },
          {
            "label": "buyerFeeRate",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:20"
          },
          {
            "label": "counteroffers",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
            "contract": "AtomicSwapBase",
            "src": "contracts/abstracts/AtomicSwapBase.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)88_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)103_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(BidStatus)919": {
            "label": "enum IAtomicSwapBase.BidStatus",
            "members": [
              "Cancelled",
              "Executed",
              "Placed"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(OrderStatus)887": {
            "label": "enum IAtomicSwapBase.OrderStatus",
            "members": [
              "INITIAL",
              "CANCEL",
              "COMPLETE",
              "SYNC"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Bid)935_storage)": {
            "label": "mapping(address => struct IAtomicSwapBase.Bid)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Bid)935_storage))": {
            "label": "mapping(bytes32 => mapping(address => struct IAtomicSwapBase.Bid))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AtomicSwapOrder)915_storage)": {
            "label": "mapping(bytes32 => struct IAtomicSwapBase.AtomicSwapOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(AtomicSwapOrder)915_storage": {
            "label": "struct IAtomicSwapBase.AtomicSwapOrder",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)887",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maker",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "sellToken",
                "type": "t_struct(Coin)882_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "taker",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "buyToken",
                "type": "t_struct(Coin)882_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "minBidAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "canceledAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "completedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "acceptBid",
                "type": "t_bool",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(Bid)935_storage": {
            "label": "struct IAtomicSwapBase.Bid",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "order",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(BidStatus)919",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bidder",
                "type": "t_address",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "bidderReceiver",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "receiveTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "expireTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Coin)882_storage": {
            "label": "struct IAtomicSwapBase.Coin",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
