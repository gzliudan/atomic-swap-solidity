/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  TokenTransferHelper,
  TokenTransferHelperInterface,
} from "../../../../../contracts/abstracts/libs/utils/TokenTransferHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
    ],
    name: "NotAllowedTransferAmount",
    type: "error",
  },
] as const;

const _bytecode =
  "0x610bf8610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c806306cf2280146100455780638dbb76c71461006e575b600080fd5b81801561005157600080fd5b5061006c60048036038101906100679190610610565b610097565b005b81801561007a57600080fd5b506100956004803603810190610090919061069d565b610128565b005b60008284866100a6919061076e565b6100b091906107df565b9050600081866100c09190610810565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610111576101018888836101bc565b61010c8884846101bc565b61011e565b61011d87848385610284565b5b5050505050505050565b6000828486610137919061076e565b61014191906107df565b9050600081866101519190610810565b9050600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16146101a457610193898989846103e4565b61019f898985856103e4565b6101b1565b6101b087848385610284565b5b505050505050505050565b60008390508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b81526004016101fc929190610862565b6020604051808303816000875af115801561021b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023f91906108c3565b61027e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102759061094d565b60405180910390fd5b50505050565b60008473ffffffffffffffffffffffffffffffffffffffff16836040516102aa9061099e565b60006040518083038185875af1925050503d80600081146102e7576040519150601f19603f3d011682016040523d82523d6000602084013e6102ec565b606091505b5050905080610330576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610327906109ff565b60405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff16836040516103569061099e565b60006040518083038185875af1925050503d8060008114610393576040519150601f19603f3d011682016040523d82523d6000602084013e610398565b606091505b50509050806103dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d390610a6b565b60405180910390fd5b505050505050565b600084905060008173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e86306040518363ffffffff1660e01b8152600401610426929190610a8b565b602060405180830381865afa158015610443573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104679190610ac9565b9050828110156104b05780836040517f7c8db62f0000000000000000000000000000000000000000000000000000000081526004016104a7929190610af6565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040518463ffffffff1660e01b81526004016104ed93929190610b1f565b6020604051808303816000875af115801561050c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053091906108c3565b61056f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056690610ba2565b60405180910390fd5b505050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105a78261057c565b9050919050565b6105b78161059c565b81146105c257600080fd5b50565b6000813590506105d4816105ae565b92915050565b6000819050919050565b6105ed816105da565b81146105f857600080fd5b50565b60008135905061060a816105e4565b92915050565b60008060008060008060c0878903121561062d5761062c610577565b5b600061063b89828a016105c5565b965050602061064c89828a016105c5565b955050604061065d89828a016105fb565b945050606061066e89828a016105fb565b935050608061067f89828a016105fb565b92505060a061069089828a016105c5565b9150509295509295509295565b600080600080600080600060e0888a0312156106bc576106bb610577565b5b60006106ca8a828b016105c5565b97505060206106db8a828b016105c5565b96505060406106ec8a828b016105c5565b95505060606106fd8a828b016105fb565b945050608061070e8a828b016105fb565b93505060a061071f8a828b016105fb565b92505060c06107308a828b016105c5565b91505092959891949750929550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610779826105da565b9150610784836105da565b9250828202610792816105da565b915082820484148315176107a9576107a861073f565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006107ea826105da565b91506107f5836105da565b925082610805576108046107b0565b5b828204905092915050565b600061081b826105da565b9150610826836105da565b925082820390508181111561083e5761083d61073f565b5b92915050565b61084d8161059c565b82525050565b61085c816105da565b82525050565b60006040820190506108776000830185610844565b6108846020830184610853565b9392505050565b60008115159050919050565b6108a08161088b565b81146108ab57600080fd5b50565b6000815190506108bd81610897565b92915050565b6000602082840312156108d9576108d8610577565b5b60006108e7848285016108ae565b91505092915050565b600082825260208201905092915050565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b60006109376010836108f0565b915061094282610901565b602082019050919050565b600060208201905081810360008301526109668161092a565b9050919050565b600081905092915050565b50565b600061098860008361096d565b915061099382610978565b600082019050919050565b60006109a98261097b565b9150819050919050565b7f5472616e7366657220746f20726563697069656e74206661696c65642e000000600082015250565b60006109e9601d836108f0565b91506109f4826109b3565b602082019050919050565b60006020820190508181036000830152610a18816109dc565b9050919050565b7f5472616e7366657220746f207472656173757279206661696c65642e00000000600082015250565b6000610a55601c836108f0565b9150610a6082610a1f565b602082019050919050565b60006020820190508181036000830152610a8481610a48565b9050919050565b6000604082019050610aa06000830185610844565b610aad6020830184610844565b9392505050565b600081519050610ac3816105e4565b92915050565b600060208284031215610adf57610ade610577565b5b6000610aed84828501610ab4565b91505092915050565b6000604082019050610b0b6000830185610853565b610b186020830184610853565b9392505050565b6000606082019050610b346000830186610844565b610b416020830185610844565b610b4e6040830184610853565b949350505050565b7f5472616e7366657246726f6d206661696c65642e000000000000000000000000600082015250565b6000610b8c6014836108f0565b9150610b9782610b56565b602082019050919050565b60006020820190508181036000830152610bbb81610b7f565b905091905056fea2646970667358221220886d6324e70c4081325fceb8850e1aaa012dd9d3faec29ee4d0a6dfb09536a9064736f6c63430008140033";

type TokenTransferHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenTransferHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenTransferHelper__factory extends ContractFactory {
  constructor(...args: TokenTransferHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TokenTransferHelper & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TokenTransferHelper__factory {
    return super.connect(runner) as TokenTransferHelper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenTransferHelperInterface {
    return new Interface(_abi) as TokenTransferHelperInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenTransferHelper {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TokenTransferHelper;
  }
}
