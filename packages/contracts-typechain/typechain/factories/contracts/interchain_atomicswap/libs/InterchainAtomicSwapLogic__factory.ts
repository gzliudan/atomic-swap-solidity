/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  InterchainAtomicSwapLogic,
  InterchainAtomicSwapLogicInterface,
} from "../../../../contracts/interchain_atomicswap/libs/InterchainAtomicSwapLogic";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "admin",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "chainID",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "bridge",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "sellerFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyerFee",
            type: "uint256",
          },
        ],
        internalType: "struct IInterchainAtomicSwap.InitialParams",
        name: "_params",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "maxFee",
        type: "uint256",
      },
    ],
    name: "_validateInitializeParams",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6103d6610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063cf5bfc7c1461003a575b600080fd5b610054600480360381019061004f91906101c6565b610056565b005b8082608001351061009c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009390610289565b60405180910390fd5b808260a00135106100e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d990610289565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1682606001602081019061010d9190610307565b73ffffffffffffffffffffffffffffffffffffffff1603610163576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015a90610380565b60405180910390fd5b5050565b600080fd5b600080fd5b600060c082840312156101875761018661016c565b5b81905092915050565b6000819050919050565b6101a381610190565b81146101ae57600080fd5b50565b6000813590506101c08161019a565b92915050565b60008060e083850312156101dd576101dc610167565b5b60006101eb85828601610171565b92505060c06101fc858286016101b1565b9150509250929050565b600082825260208201905092915050565b7f73656c6c65724665652068617320746f20626520736d616c6c6572207468616e60008201527f206d617846656500000000000000000000000000000000000000000000000000602082015250565b6000610273602783610206565b915061027e82610217565b604082019050919050565b600060208201905081810360008301526102a281610266565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102d4826102a9565b9050919050565b6102e4816102c9565b81146102ef57600080fd5b50565b600081359050610301816102db565b92915050565b60006020828403121561031d5761031c610167565b5b600061032b848285016102f2565b91505092915050565b7f696e76616c696420747265617375727920616464726573730000000000000000600082015250565b600061036a601883610206565b915061037582610334565b602082019050919050565b600060208201905081810360008301526103998161035d565b905091905056fea2646970667358221220e24ae162db7c1b20359b28d87b258cc186297ebfdd7314a98c9351f977342b6b64736f6c63430008140033";

type InterchainAtomicSwapLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InterchainAtomicSwapLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InterchainAtomicSwapLogic__factory extends ContractFactory {
  constructor(...args: InterchainAtomicSwapLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      InterchainAtomicSwapLogic & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): InterchainAtomicSwapLogic__factory {
    return super.connect(runner) as InterchainAtomicSwapLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InterchainAtomicSwapLogicInterface {
    return new Interface(_abi) as InterchainAtomicSwapLogicInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): InterchainAtomicSwapLogic {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as InterchainAtomicSwapLogic;
  }
}
