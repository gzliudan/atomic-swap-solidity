import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { InterchainAtomicSwap, InterchainAtomicSwapInterface } from "../../../contracts/interchain_atomicswap/InterchainAtomicSwap";
type InterchainAtomicSwapConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class InterchainAtomicSwap__factory extends ContractFactory {
    constructor(...args: InterchainAtomicSwapConstructorParams);
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<InterchainAtomicSwap & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): InterchainAtomicSwap__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50615d0680620000216000396000f3fe60806040526004361061014b5760003560e01c806389f68190116100b6578063df7cec281161006f578063df7cec2814610426578063dfa2e8e614610442578063e78cea921461046b578063f2fde38b14610496578063fca6caa1146104bf578063fce9f790146105075761014b565b806389f68190146103235780638d241c7b1461034e5780638da5cb5b146103775780639053f2fe146103a25780639ab3729d146103cd578063a743a3d0146103e95761014b565b806353f10c801161010857806353f10c8014610219578063593333f0146102445780636220b2e51461026d57806366e929bf146102ae5780636f1e24fe146102f0578063715018a61461030c5761014b565b8063022066611461015057806306be619c1461016c57806316b50a821461018857806337be0022146101a457806340d7185c146101c057806342526e4e146101dc575b600080fd5b61016a600480360381019061016591906142ba565b610530565b005b61018660048036038101906101819190614306565b61095c565b005b6101a2600480360381019061019d9190614352565b610e72565b005b6101be60048036038101906101b9919061439e565b611225565b005b6101da60048036038101906101d591906145eb565b61162c565b005b3480156101e857600080fd5b5061020360048036038101906101fe919061468f565b611990565b6040516102109190614719565b60405180910390f35b34801561022557600080fd5b5061022e6119a6565b60405161023b919061474d565b60405180910390f35b34801561025057600080fd5b5061026b60048036038101906102669190614787565b6119ac565b005b34801561027957600080fd5b50610294600480360381019061028f91906147ea565b611d49565b6040516102a595949392919061489d565b60405180910390f35b3480156102ba57600080fd5b506102d560048036038101906102d0919061491c565b611de8565b6040516102e7969594939291906149b3565b60405180910390f35b61030a60048036038101906103059190614a33565b611e5e565b005b34801561031857600080fd5b5061032161229e565b005b34801561032f57600080fd5b506103386122b2565b604051610345919061474d565b60405180910390f35b34801561035a57600080fd5b5061037560048036038101906103709190614a7f565b6122b8565b005b34801561038357600080fd5b5061038c61248b565b6040516103999190614719565b60405180910390f35b3480156103ae57600080fd5b506103b76124c3565b6040516103c4919061474d565b60405180910390f35b6103e760048036038101906103e29190614acc565b6124c9565b005b3480156103f557600080fd5b50610410600480360381019061040b919061491c565b612c7b565b60405161041d919061474d565b60405180910390f35b610440600480360381019061043b91906147ea565b612ca0565b005b34801561044e57600080fd5b5061046960048036038101906104649190614a7f565b61301c565b005b34801561047757600080fd5b506104806131ef565b60405161048d9190614b59565b60405180910390f35b3480156104a257600080fd5b506104bd60048036038101906104b89190614b74565b613215565b005b3480156104cb57600080fd5b506104e660048036038101906104e191906147ea565b61329b565b6040516104fe9c9b9a99989796959493929190614c51565b60405180910390f35b34801561051357600080fd5b5061052e600480360381019061052991906145eb565b613429565b005b610538613430565b80600001356000801b600080838152602001908152602001600020600001540361058e576040517f5dcaf2d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260000135905060008360200160208101906105ac9190614b74565b9050600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610614576040517f0809490800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806000848152602001908152602001600020905080600c0160009054906101000a900460ff16610672576040517f3c24fafc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461072c578060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336040517f0500cb4c000000000000000000000000000000000000000000000000000000008152600401610723929190614d0d565b60405180910390fd5b60006001600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060028081111561079357610792614817565b5b8160020160009054906101000a900460ff1660028111156107b7576107b6614817565b5b1461080a578060020160009054906101000a900460ff166040517f64b08c060000000000000000000000000000000000000000000000000000000081526004016108019190614d36565b60405180910390fd5b4281600401541015610859578060040154426040517f1d355639000000000000000000000000000000000000000000000000000000008152600401610850929190614d51565b60405180910390fd5b60018160020160006101000a81548160ff0219169083600281111561088157610880614817565b5b021790555060008260020190506108e88160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360010154600454613487565b600083600501905061094a8160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168560010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168560000154600354613487565b505050505050506109596135de565b50565b610964613430565b80600001356000801b60008083815260200190815260200160002060000154036109ba576040517f5dcaf2d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060008460000135815260200190815260200160002090506000600860008560000135815260200190815260200160002060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600c0160009054906101000a900460ff1615610a5c576040517f531749dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168260040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614158015610b0d57503373ffffffffffffffffffffffffffffffffffffffff168260040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b15610b44576040517fbe544a2b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115610b5857610b57614817565b5b8260010160009054906101000a900460ff166003811115610b7c57610b7b614817565b5b03610bb3576040517f0368368700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028260010160006101000a81548160ff02191690836003811115610bdb57610bda614817565b5b02179055504282600a01819055506000349050600073ffffffffffffffffffffffffffffffffffffffff168360050160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610cb35782600501600101543411610c9d573483600501600101546040517f04157bb4000000000000000000000000000000000000000000000000000000008152600401610c94929190614d51565b60405180910390fd5b826005016001015434610cb09190614da9565b90505b610cf08360050160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16338486600501600101546003546135f7565b600080600187604051602001610d0893929190614ee9565b6040516020818303038152906040529050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4a8b2f983600960009054906101000a900461ffff1633856040518563ffffffff1660e01b8152600401610d8993929190614fc0565b6000604051808303818588803b158015610da257600080fd5b505af1158015610db6573d6000803e3d6000fd5b505050505085600001358460040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168560010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f6bf7309f141d1b44e414f1fc04d98491cd0acf98f0f1e5ad885d0a7ce164e6fa60405160405180910390a45050505050610e6f6135de565b50565b610e7a613430565b80604001356000801b6000808381526020019081526020016000206000015403610ed0576040517f5dcaf2d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260400135905060008360000135905060006001600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610fc0576040517fb8cee9f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806000876040013581526020019081526020016000209050806007015483101561102357826040517fd9cf167e00000000000000000000000000000000000000000000000000000000815260040161101a919061474d565b60405180910390fd5b60008260000154846110359190614da9565b905060008060008781526020019081526020016000206005019050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146110dd576110d88160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16333085613751565b611123565b8134101561112257346040517fd9cf167e000000000000000000000000000000000000000000000000000000008152600401611119919061474d565b60405180910390fd5b5b61113c8880360381019061113791906150a7565b6138e4565b60008060038a60405160200161115493929190615160565b6040516020818303038152906040529050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4a8b2f984346111af9190614da9565b600960009054906101000a900461ffff1633856040518563ffffffff1660e01b81526004016111e093929190614fc0565b6000604051808303818588803b1580156111f957600080fd5b505af115801561120d573d6000803e3d6000fd5b505050505050505050505050506112226135de565b50565b61122d613430565b80600001356000801b6000808381526020019081526020016000206000015403611283576040517f5dcaf2d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060008460000135815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611326576040517f978f045600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600381111561133a57611339614817565b5b8160010160009054906101000a900460ff16600381111561135e5761135d614817565b5b14611395576040517f0368368700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160010160006101000a81548160ff021916908360038111156113bd576113bc614817565b5b0217905550600073ffffffffffffffffffffffffffffffffffffffff168160020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611470573373ffffffffffffffffffffffffffffffffffffffff166108fc82600501600101549081150290604051600060405180830381858888f1935050505015801561146a573d6000803e3d6000fd5b5061151e565b8060020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3383600501600101546040518363ffffffff1660e01b81526004016114d9929190615197565b6020604051808303816000875af11580156114f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151c91906151ec565b505b6000806002856000013560405160200161153a93929190615219565b6040516020818303038152906040529050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4a8b2f934600960009054906101000a900461ffff1633856040518563ffffffff1660e01b81526004016115bb93929190614fc0565b6000604051808303818588803b1580156115d457600080fd5b505af11580156115e8573d6000803e3d6000fd5b505050505083600001357ff68aeec8f55d67a9b2cf2b6caea31e11f2c14e09da250170575d63911f26aa6e60405160405180910390a25050506116296135de565b50565b600082826000906020926116429392919061525a565b81019061164f91906152ba565b90506000600681111561166557611664614817565b5b81600681111561167857611677614817565b5b0361183557600083836020906040926116939392919061525a565b9061169e91906152ff565b90506000848460409080926116b59392919061525a565b8101906116c2919061544f565b905081600080848152602001908152602001600020600001819055508060600151600080848152602001908152602001600020600c0160006101000a81548160ff021916908315150217905550806000015160008084815260200190815260200160002060050160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155905050806040015160008084815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080602001516008600084815260200190815260200160002060000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050611988565b6001600681111561184957611848614817565b5b81600681111561185c5761185b614817565b5b036118cd576000838360209080926118769392919061525a565b81019061188391906154cc565b905060026000808360000151815260200190815260200160002060010160006101000a81548160ff021916908360038111156118c2576118c1614817565b5b021790555050611987565b600260068111156118e1576118e0614817565b5b8160068111156118f4576118f3614817565b5b0361192a5760008383602090809261190e9392919061525a565b9061191991906152ff565b905061192481613a4c565b50611986565b6003600681111561193e5761193d614817565b5b81600681111561195157611950614817565b5b036119855760008383602090809261196b9392919061525a565b81019061197891906150a7565b9050611983816138e4565b505b5b5b5b505050505050565b60008161199c9061554a565b60601c9050919050565b60045481565b60006119b6613b76565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015611a045750825b9050600060018367ffffffffffffffff16148015611a39575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015611a47575080155b15611a7e576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315611ace5760018560000160086101000a81548160ff0219169083151502179055505b611ae9866000016020810190611ae49190614b74565b613b9e565b6103e8866080013510611b31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b2890615634565b60405180910390fd5b6103e88660a0013510611b79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b7090615634565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16866060016020810190611ba49190614b74565b73ffffffffffffffffffffffffffffffffffffffff1603611bfa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bf1906156a0565b60405180910390fd5b85608001356003819055508560a00135600481905550856060016020810190611c239190614b74565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550856020016020810190611c7691906156c0565b600960006101000a81548161ffff021916908361ffff160217905550856040016020810190611ca59190614b74565b600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508315611d415760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051611d389190615728565b60405180910390a15b505050505050565b60086020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900461ffff16908060010160169054906101000a900461ffff16905085565b6001602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060020160009054906101000a900460ff16908060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154905086565b611e66613430565b80600001356000801b6000808381526020019081526020016000206000015403611ebc576040517f5dcaf2d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260000135905060008360200135905060006001600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611fac576040517f0a0c23ee00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080600085815260200190815260200160002090506000830361200757826040517fd9cf167e000000000000000000000000000000000000000000000000000000008152600401611ffe919061474d565b60405180910390fd5b8282600001600082825461201b9190615743565b925050819055508060050160010154826000015411156120765781600001546040517fd9cf167e00000000000000000000000000000000000000000000000000000000815260040161206d919061474d565b60405180910390fd5b6000816005019050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461210b576121068160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16333087613751565b612150565b83341461214f57346040517fd9cf167e000000000000000000000000000000000000000000000000000000008152600401612146919061474d565b60405180910390fd5b5b600080600489604051602001612168939291906157b6565b6040516020818303038152906040529050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4a8b2f934600960009054906101000a900461ffff1633856040518563ffffffff1660e01b81526004016121e993929190614fc0565b6000604051808303818588803b15801561220257600080fd5b505af1158015612216573d6000803e3d6000fd5b505050505083600001548460020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1689600001357f7786094a5edc61a0463300b9b97a1b22d338bc800ed33404ba9a3888b71de0fc60405160405180910390a45050505050505061229b6135de565b50565b6122a6613c24565b6122b06000613cab565b565b60035481565b60008160000135905060008260200160208101906122d69190614b74565b90506000806000848152602001908152602001600020905080600c0160009054906101000a900460ff16612336576040517f3c24fafc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000154036123c8576040517f0a0c23ee00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000856040013514806123e5575081600501600101548560400135115b1561242b5784604001356040517fd9cf167e000000000000000000000000000000000000000000000000000000008152600401612422919061474d565b60405180910390fd5b84604001356006600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050505050565b600080612496613d82565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60055481565b6124d1613430565b6000816000018036038101906124e791906158a3565b9050600073ffffffffffffffffffffffffffffffffffffffff1681600001516000015173ffffffffffffffffffffffffffffffffffffffff161415801561253c575061253a816000015160000151613daa565b155b15612586578060000151600001516040517f19bb402900000000000000000000000000000000000000000000000000000000815260040161257d9190614719565b60405180910390fd5b60008160800151116125c4576040517f5fe07c7d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061262f5750806040015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15612666576040517f0809490800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b428160a0015110156126b5578060a00151426040517ff00605cf0000000000000000000000000000000000000000000000000000000081526004016126ac929190614d51565b60405180910390fd5b60006126c033613dbd565b90506126cd813384613e09565b60006040518060a001604052806001808111156126ed576126ec614817565b5b8152602001856101200160208101906127069190614b74565b73ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600960009054906101000a900461ffff1661ffff1681526020018561016001602081019061276c91906156c0565b61ffff168152509050806008600084815260200190815260200160002060008201518160000160006101000a81548160ff021916908360018111156127b4576127b3614817565b5b021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160010160146101000a81548161ffff021916908361ffff16021790555060808201518160010160166101000a81548161ffff021916908361ffff1602179055509050506000349050600073ffffffffffffffffffffffffffffffffffffffff1684600001516000015173ffffffffffffffffffffffffffffffffffffffff16036129375783600001516020015134101561291c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129139061591d565b60405180910390fd5b836000015160200151816129309190614da9565b9050612ae5565b6000846000015160000151905060008173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401612981929190614d0d565b602060405180830381865afa15801561299e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129c29190615952565b9050856000015160200151811015612a1b57856000015160200151816040517f7c8db62f000000000000000000000000000000000000000000000000000000008152600401612a12929190614d51565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd33308960000151602001516040518463ffffffff1660e01b8152600401612a609392919061597f565b6020604051808303816000875af1158015612a7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612aa391906151ec565b612ae2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ad990615a02565b60405180910390fd5b50505b60006040518060a001604052808660200151815260200187610120016020810190612b109190614b74565b73ffffffffffffffffffffffffffffffffffffffff16815260200187610140016020810190612b3f9190614b74565b73ffffffffffffffffffffffffffffffffffffffff1681526020018660c00151151581526020018660a00151815250905060008060008684604051602001612b8a9493929190615ac8565b6040516020818303038152906040529050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4a8b2f984600960009054906101000a900461ffff1633856040518563ffffffff1660e01b8152600401612c0b93929190614fc0565b6000604051808303818588803b158015612c2457600080fd5b505af1158015612c38573d6000803e3d6000fd5b5050505050847f8b82d32987f9a4ae1bc7868a6f104edb711227ec3c9fccb0416a14fcc29bec5a60405160405180910390a2505050505050612c786135de565b50565b6006602052816000526040600020602052806000526040600020600091509150505481565b612ca8613430565b806000801b6000808381526020019081526020016000206000015403612cfa576040517f5dcaf2d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003414612d3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d3490615b5a565b60405180910390fd5b60006001600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612e1a576040517f978f045600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280811115612e2d57612e2c614817565b5b8160020160009054906101000a900460ff166002811115612e5157612e50614817565b5b14612ea4578060020160009054906101000a900460ff166040517f64b08c06000000000000000000000000000000000000000000000000000000008152600401612e9b9190614d36565b60405180910390fd5b60008160020160006101000a81548160ff02191690836002811115612ecc57612ecb614817565b5b021790555060008060008581526020019081526020016000206005019050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612f9e57612f998160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846000015461412a565b61300e565b8160020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc83600001549081150290604051600060405180830381858888f1935050505015801561300c573d6000803e3d6000fd5b505b5050506130196135de565b50565b600081600001359050600082602001602081019061303a9190614b74565b90506000806000848152602001908152602001600020905080600c0160009054906101000a900460ff1661309a576040517f3c24fafc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001540361312c576040517f0a0c23ee00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085604001351480613149575081600501600101548560400135115b1561318f5784604001356040517fd9cf167e000000000000000000000000000000000000000000000000000000008152600401613186919061474d565b60405180910390fd5b84604001356006600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050505050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61321d613c24565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361328f5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016132869190614719565b60405180910390fd5b61329881613cab565b50565b60006020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806005016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250509080600701549080600801549080600901549080600a01549080600b01549080600c0160009054906101000a900460ff1690508c565b5050505050565b600061343a6141f2565b9050600281600001540361347a576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002816000018190555050565b60006103e882846134989190615b7a565b6134a29190615beb565b9050600081846134b29190614da9565b9050600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614613525576134f386868361412a565b61352086600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168461412a565b6135d6565b8473ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561356b573d6000803e3d6000fd5b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156135d4573d6000803e3d6000fd5b505b505050505050565b60006135e86141f2565b90506001816000018190555050565b60006103e882846136089190615b7a565b6136129190615beb565b9050600081846136229190614da9565b9050600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146136975761366487878784613751565b6136928787600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685613751565b613748565b8473ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156136dd573d6000803e3d6000fd5b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015613746573d6000803e3d6000fd5b505b50505050505050565b600084905060008173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401613793929190614d0d565b602060405180830381865afa1580156137b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137d49190615952565b90508281101561381d5780836040517f7c8db62f000000000000000000000000000000000000000000000000000000008152600401613814929190614d51565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040518463ffffffff1660e01b815260040161385a9392919061597f565b6020604051808303816000875af1158015613879573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061389d91906151ec565b6138dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016138d390615c68565b60405180910390fd5b505050505050565b60006040518060c00160405280836000015181526020018360400151815260200160028081111561391857613917614817565b5b8152602001836020015173ffffffffffffffffffffffffffffffffffffffff168152602001428152602001836060015181525090508060016000846040015181526020019081526020016000206000846020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff021916908360028111156139e5576139e4614817565b5b021790555060608201518160020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816003015560a082015181600401559050505050565b6000808281526020019081526020016000206000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905550506004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090555050600782016000905560088201600090556009820160009055600a820160009055600b820160009055600c820160006101000a81549060ff0219169055505050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b613ba661421a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603613c185760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401613c0f9190614719565b60405180910390fd5b613c2181613cab565b50565b613c2c61425a565b73ffffffffffffffffffffffffffffffffffffffff16613c4a61248b565b73ffffffffffffffffffffffffffffffffffffffff1614613ca957613c6d61425a565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401613ca09190614719565b60405180910390fd5b565b6000613cb5613d82565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b600080823b905060008111915050919050565b600081600554604051602001613dd4929190615197565b60405160208183030381529060405280519060200120905060056000815480929190613dff90615c88565b9190505550919050565b6000801b6000808581526020019081526020016000206000015414613e5a576040517f966753c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060405180610180016040528085815260200160006003811115613e8257613e81614817565b5b81526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183600001518152602001836060015173ffffffffffffffffffffffffffffffffffffffff168152602001836020015181526020018360800151815260200142815260200160008152602001600081526020018360a0015181526020018360c0015115158152509050806000808681526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff02191690836003811115613f5357613f52614817565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160050160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505060c0820151816007015560e08201518160080155610100820151816009015561012082015181600a015561014082015181600b015561016082015181600c0160006101000a81548160ff021916908315150217905550905050837f8b82d32987f9a4ae1bc7868a6f104edb711227ec3c9fccb0416a14fcc29bec5a60405160405180910390a250505050565b60008390508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b815260040161416a929190615197565b6020604051808303816000875af1158015614189573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141ad91906151ec565b6141ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016141e390615c68565b60405180910390fd5b50505050565b60007f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00905090565b614222614262565b614258576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600033905090565b600061426c613b76565b60000160089054906101000a900460ff16905090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000604082840312156142b1576142b0614296565b5b81905092915050565b6000604082840312156142d0576142cf61428c565b5b60006142de8482850161429b565b91505092915050565b6000604082840312156142fd576142fc614296565b5b81905092915050565b60006040828403121561431c5761431b61428c565b5b600061432a848285016142e7565b91505092915050565b60006080828403121561434957614348614296565b5b81905092915050565b6000608082840312156143685761436761428c565b5b600061437684828501614333565b91505092915050565b60006020828403121561439557614394614296565b5b81905092915050565b6000602082840312156143b4576143b361428c565b5b60006143c28482850161437f565b91505092915050565b600061ffff82169050919050565b6143e2816143cb565b81146143ed57600080fd5b50565b6000813590506143ff816143d9565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6144588261440f565b810181811067ffffffffffffffff8211171561447757614476614420565b5b80604052505050565b600061448a614282565b9050614496828261444f565b919050565b600067ffffffffffffffff8211156144b6576144b5614420565b5b6144bf8261440f565b9050602081019050919050565b82818337600083830152505050565b60006144ee6144e98461449b565b614480565b90508281526020810184848401111561450a5761450961440a565b5b6145158482856144cc565b509392505050565b600082601f83011261453257614531614405565b5b81356145428482602086016144db565b91505092915050565b600067ffffffffffffffff82169050919050565b6145688161454b565b811461457357600080fd5b50565b6000813590506145858161455f565b92915050565b600080fd5b600080fd5b60008083601f8401126145ab576145aa614405565b5b8235905067ffffffffffffffff8111156145c8576145c761458b565b5b6020830191508360018202830111156145e4576145e3614590565b5b9250929050565b6000806000806000608086880312156146075761460661428c565b5b6000614615888289016143f0565b955050602086013567ffffffffffffffff81111561463657614635614291565b5b6146428882890161451d565b945050604061465388828901614576565b935050606086013567ffffffffffffffff81111561467457614673614291565b5b61468088828901614595565b92509250509295509295909350565b6000602082840312156146a5576146a461428c565b5b600082013567ffffffffffffffff8111156146c3576146c2614291565b5b6146cf8482850161451d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000614703826146d8565b9050919050565b614713816146f8565b82525050565b600060208201905061472e600083018461470a565b92915050565b6000819050919050565b61474781614734565b82525050565b6000602082019050614762600083018461473e565b92915050565b600060c0828403121561477e5761477d614296565b5b81905092915050565b600060c0828403121561479d5761479c61428c565b5b60006147ab84828501614768565b91505092915050565b6000819050919050565b6147c7816147b4565b81146147d257600080fd5b50565b6000813590506147e4816147be565b92915050565b600060208284031215614800576147ff61428c565b5b600061480e848285016147d5565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061485757614856614817565b5b50565b600081905061486882614846565b919050565b60006148788261485a565b9050919050565b6148888161486d565b82525050565b614897816143cb565b82525050565b600060a0820190506148b2600083018861487f565b6148bf602083018761470a565b6148cc604083018661470a565b6148d9606083018561488e565b6148e6608083018461488e565b9695505050505050565b6148f9816146f8565b811461490457600080fd5b50565b600081359050614916816148f0565b92915050565b600080604083850312156149335761493261428c565b5b6000614941858286016147d5565b925050602061495285828601614907565b9150509250929050565b614965816147b4565b82525050565b6003811061497c5761497b614817565b5b50565b600081905061498d8261496b565b919050565b600061499d8261497f565b9050919050565b6149ad81614992565b82525050565b600060c0820190506149c8600083018961473e565b6149d5602083018861495c565b6149e260408301876149a4565b6149ef606083018661470a565b6149fc608083018561473e565b614a0960a083018461473e565b979650505050505050565b600060408284031215614a2a57614a29614296565b5b81905092915050565b600060408284031215614a4957614a4861428c565b5b6000614a5784828501614a14565b91505092915050565b600060608284031215614a7657614a75614296565b5b81905092915050565b600060608284031215614a9557614a9461428c565b5b6000614aa384828501614a60565b91505092915050565b60006101808284031215614ac357614ac2614296565b5b81905092915050565b60006101808284031215614ae357614ae261428c565b5b6000614af184828501614aac565b91505092915050565b6000819050919050565b6000614b1f614b1a614b15846146d8565b614afa565b6146d8565b9050919050565b6000614b3182614b04565b9050919050565b6000614b4382614b26565b9050919050565b614b5381614b38565b82525050565b6000602082019050614b6e6000830184614b4a565b92915050565b600060208284031215614b8a57614b8961428c565b5b6000614b9884828501614907565b91505092915050565b60048110614bb257614bb1614817565b5b50565b6000819050614bc382614ba1565b919050565b6000614bd382614bb5565b9050919050565b614be381614bc8565b82525050565b614bf2816146f8565b82525050565b614c0181614734565b82525050565b604082016000820151614c1d6000850182614be9565b506020820151614c306020850182614bf8565b50505050565b60008115159050919050565b614c4b81614c36565b82525050565b60006101c082019050614c67600083018f61495c565b614c74602083018e614bda565b614c81604083018d61470a565b614c8e606083018c614c07565b614c9b60a083018b61470a565b614ca860c083018a614c07565b614cb661010083018961473e565b614cc461012083018861473e565b614cd261014083018761473e565b614ce061016083018661473e565b614cee61018083018561473e565b614cfc6101a0830184614c42565b9d9c50505050505050505050505050565b6000604082019050614d22600083018561470a565b614d2f602083018461470a565b9392505050565b6000602082019050614d4b60008301846149a4565b92915050565b6000604082019050614d66600083018561473e565b614d73602083018461473e565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000614db482614734565b9150614dbf83614734565b9250828203905081811115614dd757614dd6614d7a565b5b92915050565b6000819050919050565b600060ff82169050919050565b6000614e0f614e0a614e0584614ddd565b614afa565b614de7565b9050919050565b614e1f81614df4565b82525050565b60078110614e3657614e35614817565b5b50565b6000819050614e4782614e25565b919050565b6000614e5782614e39565b9050919050565b614e6781614e4c565b82525050565b6000614e7c60208401846147d5565b905092915050565b614e8d816147b4565b82525050565b6000614ea26020840184614907565b905092915050565b60408201614ebb6000830183614e6d565b614ec86000850182614e84565b50614ed66020830183614e93565b614ee36020850182614be9565b50505050565b6000608082019050614efe6000830186614e16565b614f0b6020830185614e5e565b614f186040830184614eaa565b949350505050565b6000614f2b826146d8565b9050919050565b614f3b81614f20565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015614f7b578082015181840152602081019050614f60565b60008484015250505050565b6000614f9282614f41565b614f9c8185614f4c565b9350614fac818560208601614f5d565b614fb58161440f565b840191505092915050565b6000606082019050614fd5600083018661488e565b614fe26020830185614f32565b8181036040830152614ff48184614f87565b9050949350505050565b600080fd5b61500c81614734565b811461501757600080fd5b50565b60008135905061502981615003565b92915050565b60006080828403121561504557615044614ffe565b5b61504f6080614480565b9050600061505f8482850161501a565b600083015250602061507384828501614907565b6020830152506040615087848285016147d5565b604083015250606061509b8482850161501a565b60608301525092915050565b6000608082840312156150bd576150bc61428c565b5b60006150cb8482850161502f565b91505092915050565b60006150e3602084018461501a565b905092915050565b608082016150fc60008301836150d4565b6151096000850182614bf8565b506151176020830183614e93565b6151246020850182614be9565b506151326040830183614e6d565b61513f6040850182614e84565b5061514d60608301836150d4565b61515a6060850182614bf8565b50505050565b600060c0820190506151756000830186614e16565b6151826020830185614e5e565b61518f60408301846150eb565b949350505050565b60006040820190506151ac600083018561470a565b6151b9602083018461473e565b9392505050565b6151c981614c36565b81146151d457600080fd5b50565b6000815190506151e6816151c0565b92915050565b6000602082840312156152025761520161428c565b5b6000615210848285016151d7565b91505092915050565b600060608201905061522e6000830186614e16565b61523b6020830185614e5e565b615248604083018461495c565b949350505050565b600080fd5b600080fd5b6000808585111561526e5761526d615250565b5b8386111561527f5761527e615255565b5b6001850283019150848603905094509492505050565b600781106152a257600080fd5b50565b6000813590506152b481615295565b92915050565b6000602082840312156152d0576152cf61428c565b5b60006152de848285016152a5565b91505092915050565b600082905092915050565b600082821b905092915050565b600061530b83836152e7565b8261531681356147b4565b92506020821015615356576153517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff836020036008026152f2565b831692505b505092915050565b60006040828403121561537457615373614ffe565b5b61537e6040614480565b9050600061538e84828501614907565b60008301525060206153a28482850161501a565b60208301525092915050565b6000813590506153bd816151c0565b92915050565b600060c082840312156153d9576153d8614ffe565b5b6153e360a0614480565b905060006153f38482850161535e565b600083015250604061540784828501614907565b602083015250606061541b84828501614907565b604083015250608061542f848285016153ae565b60608301525060a06154438482850161501a565b60808301525092915050565b600060c082840312156154655761546461428c565b5b6000615473848285016153c3565b91505092915050565b60006040828403121561549257615491614ffe565b5b61549c6040614480565b905060006154ac848285016147d5565b60008301525060206154c084828501614907565b60208301525092915050565b6000604082840312156154e2576154e161428c565b5b60006154f08482850161547c565b91505092915050565b6000819050602082019050919050565b60007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b60006155418251615509565b80915050919050565b600061555582614f41565b8261555f846154f9565b905061556a81615535565b925060148210156155aa576155a57fffffffffffffffffffffffffffffffffffffffff000000000000000000000000836014036008026152f2565b831692505b5050919050565b600082825260208201905092915050565b7f73656c6c65724665652068617320746f20626520736d616c6c6572207468616e60008201527f206d617846656500000000000000000000000000000000000000000000000000602082015250565b600061561e6027836155b1565b9150615629826155c2565b604082019050919050565b6000602082019050818103600083015261564d81615611565b9050919050565b7f696e76616c696420747265617375727920616464726573730000000000000000600082015250565b600061568a6018836155b1565b915061569582615654565b602082019050919050565b600060208201905081810360008301526156b98161567d565b9050919050565b6000602082840312156156d6576156d561428c565b5b60006156e4848285016143f0565b91505092915050565b6000819050919050565b600061571261570d615708846156ed565b614afa565b61454b565b9050919050565b615722816156f7565b82525050565b600060208201905061573d6000830184615719565b92915050565b600061574e82614734565b915061575983614734565b925082820190508082111561577157615770614d7a565b5b92915050565b604082016157886000830183614e6d565b6157956000850182614e84565b506157a360208301836150d4565b6157b06020850182614bf8565b50505050565b60006080820190506157cb6000830186614e16565b6157d86020830185614e5e565b6157e56040830184615777565b949350505050565b6000610120828403121561580457615803614ffe565b5b61580e60e0614480565b9050600061581e8482850161535e565b60008301525060406158328482850161535e565b602083015250608061584684828501614907565b60408301525060a061585a84828501614907565b60608301525060c061586e8482850161501a565b60808301525060e06158828482850161501a565b60a083015250610100615897848285016153ae565b60c08301525092915050565b600061012082840312156158ba576158b961428c565b5b60006158c8848285016157ed565b91505092915050565b7f4e6f7420656e6f75676820657468657200000000000000000000000000000000600082015250565b60006159076010836155b1565b9150615912826158d1565b602082019050919050565b60006020820190508181036000830152615936816158fa565b9050919050565b60008151905061594c81615003565b92915050565b6000602082840312156159685761596761428c565b5b60006159768482850161593d565b91505092915050565b6000606082019050615994600083018661470a565b6159a1602083018561470a565b6159ae604083018461473e565b949350505050565b7f4661696c656420696e204c6f636b20746f6b656e000000000000000000000000600082015250565b60006159ec6014836155b1565b91506159f7826159b6565b602082019050919050565b60006020820190508181036000830152615a1b816159df565b9050919050565b604082016000820151615a386000850182614be9565b506020820151615a4b6020850182614bf8565b50505050565b615a5a81614c36565b82525050565b60c082016000820151615a766000850182615a22565b506020820151615a896040850182614be9565b506040820151615a9c6060850182614be9565b506060820151615aaf6080850182615a51565b506080820151615ac260a0850182614bf8565b50505050565b600061012082019050615ade6000830187614e16565b615aeb6020830186614e5e565b615af8604083018561495c565b615b056060830184615a60565b95945050505050565b7f556e65787065637465642045746865722073656e740000000000000000000000600082015250565b6000615b446015836155b1565b9150615b4f82615b0e565b602082019050919050565b60006020820190508181036000830152615b7381615b37565b9050919050565b6000615b8582614734565b9150615b9083614734565b9250828202615b9e81614734565b91508282048414831517615bb557615bb4614d7a565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000615bf682614734565b9150615c0183614734565b925082615c1157615c10615bbc565b5b828204905092915050565b7f4661696c656420746f207472616e736665722066726f6d000000000000000000600082015250565b6000615c526017836155b1565b9150615c5d82615c1c565b602082019050919050565b60006020820190508181036000830152615c8181615c45565b9050919050565b6000615c9382614734565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203615cc557615cc4614d7a565b5b60018201905091905056fea26469706673582212206dc2bc8384ca48f421d4d3e14beabacb1718bcd6d2365e6e7332a187d14cd35064736f6c63430008140033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "provided";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "expectedExpiry";
            readonly type: "uint256";
        }];
        readonly name: "BidAlreadyExpired";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "BidAlreadyPlaced";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "BidNotAllowed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "enum IAtomicSwapBase.BidStatus";
            readonly name: "status";
            readonly type: "uint8";
        }];
        readonly name: "BidNotInPlacedStatus";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "contractAddress";
            readonly type: "address";
        }];
        readonly name: "InvalidContractAddress";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "provided";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "maximum";
            readonly type: "uint256";
        }];
        readonly name: "InvalidExpirationTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidInitialization";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidMinimumBidLimit";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "MismatchedBidAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoBidPlaced";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "allowance";
            readonly type: "uint256";
        }];
        readonly name: "NotAllowedTransferAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "real";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "expected";
            readonly type: "uint256";
        }];
        readonly name: "NotEnoughFund";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotInitializing";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "OrderAlreadyCompleted";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "OrderAlreadyExists";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "OrderDoesNotExist";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "OrderNotAllowTake";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "OwnableInvalidOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "OwnableUnauthorizedAccount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ReentrancyGuardReentrantCall";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "caller";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "expected";
            readonly type: "address";
        }];
        readonly name: "UnauthorizedAcceptAction";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnauthorizedCancelAction";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnauthorizedSender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnauthorizedTakeAction";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnsupportedTokenPair";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "orderID";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "AcceptedBid";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "id";
            readonly type: "bytes32";
        }];
        readonly name: "AtomicSwapOrderCanceled";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "id";
            readonly type: "bytes32";
        }];
        readonly name: "AtomicSwapOrderCreated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "maker";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "taker";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "id";
            readonly type: "bytes32";
        }];
        readonly name: "AtomicSwapOrderTook";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "orderID";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }];
        readonly name: "CanceledBid";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint64";
            readonly name: "version";
            readonly type: "uint64";
        }];
        readonly name: "Initialized";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "orderID";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "ReceivedNewBid";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "orderID";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "UpdatedBid";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "orderID";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "bidder";
                readonly type: "address";
            }];
            readonly internalType: "struct IAtomicSwapBase.AcceptBidMsg";
            readonly name: "acceptBidMsg";
            readonly type: "tuple";
        }];
        readonly name: "acceptBid";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "orderID";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "bidder";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }];
            readonly internalType: "struct IAtomicSwapBase.CounterOfferMsg";
            readonly name: "counterOfferMsg";
            readonly type: "tuple";
        }];
        readonly name: "acceptCountOfffer";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "bids";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32";
            readonly name: "order";
            readonly type: "bytes32";
        }, {
            readonly internalType: "enum IAtomicSwapBase.BidStatus";
            readonly name: "status";
            readonly type: "uint8";
        }, {
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "receiveTimestamp";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "expireTimestamp";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bridge";
        readonly outputs: readonly [{
            readonly internalType: "contract ISideLzAppUpgradable";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "buyerFeeRate";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "bytesToAddress";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_orderID";
            readonly type: "bytes32";
        }];
        readonly name: "cancelBid";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "orderID";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct IAtomicSwapBase.CancelSwapMsg";
            readonly name: "cancelswap";
            readonly type: "tuple";
        }];
        readonly name: "cancelSwap";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "orderID";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "bidder";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }];
            readonly internalType: "struct IAtomicSwapBase.CounterOfferMsg";
            readonly name: "counterOfferMsg";
            readonly type: "tuple";
        }];
        readonly name: "counteroffer";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "counteroffers";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "admin";
                readonly type: "address";
            }, {
                readonly internalType: "uint16";
                readonly name: "chainID";
                readonly type: "uint16";
            }, {
                readonly internalType: "address";
                readonly name: "bridge";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "treasury";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "sellerFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "buyerFee";
                readonly type: "uint256";
            }];
            readonly internalType: "struct IInterchainAtomicSwap.InitialParams";
            readonly name: "_params";
            readonly type: "tuple";
        }];
        readonly name: "initialize";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "token";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }];
                    readonly internalType: "struct IAtomicSwapBase.Coin";
                    readonly name: "sellToken";
                    readonly type: "tuple";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "token";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }];
                    readonly internalType: "struct IAtomicSwapBase.Coin";
                    readonly name: "buyToken";
                    readonly type: "tuple";
                }, {
                    readonly internalType: "address";
                    readonly name: "maker";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "desiredTaker";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "minBidAmount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "expireAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bool";
                    readonly name: "acceptBid";
                    readonly type: "bool";
                }];
                readonly internalType: "struct IAtomicSwapBase.MakeSwapMsg";
                readonly name: "base";
                readonly type: "tuple";
            }, {
                readonly internalType: "address";
                readonly name: "makerReceiver";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "desiredTaker";
                readonly type: "address";
            }, {
                readonly internalType: "uint16";
                readonly name: "dstChainID";
                readonly type: "uint16";
            }];
            readonly internalType: "struct IInterchainAtomicSwap.ICMakeSwapMsg";
            readonly name: "icMakeSwap";
            readonly type: "tuple";
        }];
        readonly name: "makeSwap";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "_srcChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes";
            readonly name: "_srcAddress";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint64";
            readonly name: "_nonce";
            readonly type: "uint64";
        }, {
            readonly internalType: "bytes";
            readonly name: "_payload";
            readonly type: "bytes";
        }];
        readonly name: "onAcknowledgePacket";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "_srcChainID";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes";
            readonly name: "_srcAddress";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint64";
            readonly name: "_nonce";
            readonly type: "uint64";
        }, {
            readonly internalType: "bytes";
            readonly name: "_payload";
            readonly type: "bytes";
        }];
        readonly name: "onReceivePacket";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "bidAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "bidder";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "orderID";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "expireTimestamp";
                readonly type: "uint256";
            }];
            readonly internalType: "struct IAtomicSwapBase.PlaceBidMsg";
            readonly name: "placeBidMsg";
            readonly type: "tuple";
        }];
        readonly name: "placeBid";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "sellerFeeRate";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly name: "swapOrder";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "id";
            readonly type: "bytes32";
        }, {
            readonly internalType: "enum IAtomicSwapBase.OrderStatus";
            readonly name: "status";
            readonly type: "uint8";
        }, {
            readonly internalType: "address";
            readonly name: "maker";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }];
            readonly internalType: "struct IAtomicSwapBase.Coin";
            readonly name: "sellToken";
            readonly type: "tuple";
        }, {
            readonly internalType: "address";
            readonly name: "taker";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }];
            readonly internalType: "struct IAtomicSwapBase.Coin";
            readonly name: "buyToken";
            readonly type: "tuple";
        }, {
            readonly internalType: "uint256";
            readonly name: "minBidAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "createdAt";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "canceledAt";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "completedAt";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "expiredAt";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "acceptBid";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "swapOrderCounter";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly name: "swapOrderITCParams";
        readonly outputs: readonly [{
            readonly internalType: "enum IInterchainAtomicSwap.Side";
            readonly name: "side";
            readonly type: "uint8";
        }, {
            readonly internalType: "address";
            readonly name: "makerReceiver";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "takerReceiver";
            readonly type: "address";
        }, {
            readonly internalType: "uint16";
            readonly name: "srcChainID";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint16";
            readonly name: "dstChainID";
            readonly type: "uint16";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "orderID";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "takerReceiver";
                readonly type: "address";
            }];
            readonly internalType: "struct IAtomicSwapBase.TakeSwapMsg";
            readonly name: "takeswap";
            readonly type: "tuple";
        }];
        readonly name: "takeSwap";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "orderID";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "addition";
                readonly type: "uint256";
            }];
            readonly internalType: "struct IAtomicSwapBase.UpdateBidMsg";
            readonly name: "updateBidMsg";
            readonly type: "tuple";
        }];
        readonly name: "updateBid";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }];
    static createInterface(): InterchainAtomicSwapInterface;
    static connect(address: string, runner?: ContractRunner | null): InterchainAtomicSwap;
}
export {};
