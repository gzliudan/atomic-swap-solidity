import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { InterchainAtomicSwap, InterchainAtomicSwapInterface } from "../../../contracts/interchain_atomicswap/InterchainAtomicSwap";
type InterchainAtomicSwapConstructorParams = [
    linkLibraryAddresses: InterchainAtomicSwapLibraryAddresses,
    signer?: Signer
] | ConstructorParameters<typeof ContractFactory>;
export declare class InterchainAtomicSwap__factory extends ContractFactory {
    constructor(...args: InterchainAtomicSwapConstructorParams);
    static linkBytecode(linkLibraryAddresses: InterchainAtomicSwapLibraryAddresses): string;
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<InterchainAtomicSwap & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): InterchainAtomicSwap__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b506159b580620000216000396000f3fe60806040526004361061012a5760003560e01c806366e929bf116100ab5780639ab3729d1161006f5780639ab3729d14610396578063a743a3d0146103b2578063df7cec28146103ef578063e78cea921461040b578063f2fde38b14610436578063fca6caa11461045f5761012a565b806366e929bf146102a9578063715018a6146102ec5780637ecebe001461030357806389f68190146103405780638da5cb5b1461036b5761012a565b806342526e4e116100f257806342526e4e146101bb57806352c95b2a146101f857806353f10c8014610214578063593333f01461023f5780636220b2e5146102685761012a565b8063022066611461012f57806306be619c1461014b57806337be0022146101675780633d9bd2fc1461018357806340d7185c1461019f575b600080fd5b61014960048036038101906101449190613a57565b6104a7565b005b61016560048036038101906101609190613aa3565b6109dd565b005b610181600480360381019061017c9190613aef565b610e71565b005b61019d60048036038101906101989190613b3b565b611259565b005b6101b960048036038101906101b49190613d88565b6116cf565b005b3480156101c757600080fd5b506101e260048036038101906101dd9190613e2c565b611deb565b6040516101ef9190613eb6565b60405180910390f35b610212600480360381019061020d9190613ef0565b611e01565b005b34801561022057600080fd5b50610229612231565b6040516102369190613f36565b60405180910390f35b34801561024b57600080fd5b5061026660048036038101906102619190613f70565b612237565b005b34801561027457600080fd5b5061028f600480360381019061028a9190613fd3565b612548565b6040516102a0959493929190614086565b60405180910390f35b3480156102b557600080fd5b506102d060048036038101906102cb9190614105565b6125e7565b6040516102e3979695949392919061419c565b60405180910390f35b3480156102f857600080fd5b50610301612683565b005b34801561030f57600080fd5b5061032a6004803603810190610325919061420b565b612697565b6040516103379190613f36565b60405180910390f35b34801561034c57600080fd5b506103556126ee565b6040516103629190613f36565b60405180910390f35b34801561037757600080fd5b506103806126f4565b60405161038d9190613eb6565b60405180910390f35b6103b060048036038101906103ab9190614258565b61272c565b005b3480156103be57600080fd5b506103d960048036038101906103d49190614105565b612ceb565b6040516103e69190613f36565b60405180910390f35b61040960048036038101906104049190613fd3565b612d10565b005b34801561041757600080fd5b506104206131bf565b60405161042d91906142e5565b60405180910390f35b34801561044257600080fd5b5061045d6004803603810190610458919061420b565b6131e5565b005b34801561046b57600080fd5b5061048660048036038101906104819190613fd3565b61326b565b60405161049e9c9b9a999897969594939291906143b0565b60405180910390f35b6104af6133f9565b80600001356000801b6000808381526020019081526020016000206000015403610505576040517f5dcaf2d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000826000013590506000836020016020810190610523919061420b565b9050600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361058b576040517f0809490800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806000848152602001908152602001600020905080600c0160009054906101000a900460ff166105e9576040517f3c24fafc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106a3578060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336040517f0500cb4c00000000000000000000000000000000000000000000000000000000815260040161069a92919061446c565b60405180910390fd5b60006001600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060028081111561070a57610709614000565b5b8160020160009054906101000a900460ff16600281111561072e5761072d614000565b5b14610781578060020160009054906101000a900460ff166040517f64b08c060000000000000000000000000000000000000000000000000000000081526004016107789190614495565b60405180910390fd5b42816005015410156107d0578060050154426040517f1d3556390000000000000000000000000000000000000000000000000000000081526004016107c79291906144b0565b60405180910390fd5b60018160020160006101000a81548160ff021916908360028111156107f8576107f7614000565b5b021790555060008260020190508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673__$a132ddf224bcaf7b77631cdf10c807360d$__6343b03b5d90918460030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600101546004546103e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518763ffffffff1660e01b81526004016108d0969594939291906144f7565b60006040518083038186803b1580156108e857600080fd5b505af41580156108fc573d6000803e3d6000fd5b5050505060008060058960405160200161091893929190614664565b6040516020818303038152906040529050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4a8b2f934600860009054906101000a900461ffff1633856040518563ffffffff1660e01b81526004016109999392919061473b565b6000604051808303818588803b1580156109b257600080fd5b505af11580156109c6573d6000803e3d6000fd5b5050505050505050505050506109da613450565b50565b6109e56133f9565b80600001356000801b6000808381526020019081526020016000206000015403610a3b576040517f5dcaf2d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060008460000135815260200190815260200160002090506000600760008560000135815260200190815260200160002060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083803603810190610aa591906147ce565b73__$5b078b893398f17544ec956d77642311f9$__632dbbbec0909160006040518363ffffffff1660e01b8152600401610ae092919061484f565b60006040518083038186803b158015610af857600080fd5b505af4158015610b0c573d6000803e3d6000fd5b5050505060028260010160006101000a81548160ff02191690836003811115610b3857610b37614000565b5b02179055504282600a01819055506000349050600073ffffffffffffffffffffffffffffffffffffffff168360050160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610c105782600501600101543411610bfa573483600501600101546040517f04157bb4000000000000000000000000000000000000000000000000000000008152600401610bf19291906144b0565b60405180910390fd5b826005016001015434610c0d91906148a7565b90505b8260050160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673__$a132ddf224bcaf7b77631cdf10c807360d$__6311f1248b9091338587600501600101546003546103e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518863ffffffff1660e01b8152600401610cbf97969594939291906148db565b60006040518083038186803b158015610cd757600080fd5b505af4158015610ceb573d6000803e3d6000fd5b50505050600080600187604051602001610d0793929190614989565b6040516020818303038152906040529050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4a8b2f983600860009054906101000a900461ffff1633856040518563ffffffff1660e01b8152600401610d889392919061473b565b6000604051808303818588803b158015610da157600080fd5b505af1158015610db5573d6000803e3d6000fd5b505050505085600001358460040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168560010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f6bf7309f141d1b44e414f1fc04d98491cd0acf98f0f1e5ad885d0a7ce164e6fa60405160405180910390a45050505050610e6e613450565b50565b610e796133f9565b80600001356000801b6000808381526020019081526020016000206000015403610ecf576040517f5dcaf2d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060008460000135815260200190815260200160002090508073__$5b078b893398f17544ec956d77642311f9$__639efdfeb190916040518263ffffffff1660e01b8152600401610f2291906149c7565b60006040518083038186803b158015610f3a57600080fd5b505af4158015610f4e573d6000803e3d6000fd5b5050505060018160010160006101000a81548160ff02191690836003811115610f7a57610f79614000565b5b0217905550600073ffffffffffffffffffffffffffffffffffffffff168160020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361102d573373ffffffffffffffffffffffffffffffffffffffff166108fc82600501600101549081150290604051600060405180830381858888f19350505050158015611027573d6000803e3d6000fd5b506110db565b8060020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3383600501600101546040518363ffffffff1660e01b81526004016110969291906149e2565b6020604051808303816000875af11580156110b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d99190614a37565b505b600080600285600001356040516020016110f793929190614a64565b6040516020818303038152906040529050600073__$a132ddf224bcaf7b77631cdf10c807360d$__63a2040cee909186600001356040518363ffffffff1660e01b8152600401611148929190614aaa565b60006040518083038186803b15801561116057600080fd5b505af4158015611174573d6000803e3d6000fd5b50505050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4a8b2f934600860009054906101000a900461ffff1633856040518563ffffffff1660e01b81526004016111e89392919061473b565b6000604051808303818588803b15801561120157600080fd5b505af1158015611215573d6000803e3d6000fd5b505050505083600001357ff68aeec8f55d67a9b2cf2b6caea31e11f2c14e09da250170575d63911f26aa6e60405160405180910390a2505050611256613450565b50565b6112616133f9565b80600001356000801b60008083815260200190815260200160002060000154036112b7576040517f5dcaf2d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260000135905060008360400135905060006001600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036113a7576040517f0a0c23ee00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080600085815260200190815260200160002090506000830361140257826040517fd9cf167e0000000000000000000000000000000000000000000000000000000081526004016113f99190613f36565b60405180910390fd5b828260000160008282546114169190614ad3565b925050819055508060050160010154826000015411156114715781600001546040517fd9cf167e0000000000000000000000000000000000000000000000000000000081526004016114689190613f36565b60405180910390fd5b60008160050190506000349050600073ffffffffffffffffffffffffffffffffffffffff168260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461152c576115273330878560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16613469909392919063ffffffff16565b611580565b8434101561157157346040517fd9cf167e0000000000000000000000000000000000000000000000000000000081526004016115689190613f36565b60405180910390fd5b848161157d91906148a7565b90505b60008060048a60405160200161159893929190614ba4565b6040516020818303038152906040529050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4a8b2f983600860009054906101000a900461ffff1633856040518563ffffffff1660e01b81526004016116199392919061473b565b6000604051808303818588803b15801561163257600080fd5b505af1158015611646573d6000803e3d6000fd5b505050505084600001548560020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168a600001357f7786094a5edc61a0463300b9b97a1b22d338bc800ed33404ba9a3888b71de0fc60405160405180910390a450505050505050506116cc613450565b50565b600082826000906020926116e593929190614be5565b8101906116f29190614c45565b90506000600681111561170857611707614000565b5b81600681111561171b5761171a614000565b5b036118d8576000838360209060409261173693929190614be5565b906117419190614c8a565b905060008484604090809261175893929190614be5565b8101906117659190614dda565b905081600080848152602001908152602001600020600001819055508060600151600080848152602001908152602001600020600c0160006101000a81548160ff021916908315150217905550806000015160008084815260200190815260200160002060050160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155905050806040015160008084815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080602001516007600084815260200190815260200160002060000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050611de3565b600160068111156118ec576118eb614000565b5b8160068111156118ff576118fe614000565b5b036119705760008383602090809261191993929190614be5565b81019061192691906147ce565b905060026000808360000151815260200190815260200160002060010160006101000a81548160ff0219169083600381111561196557611964614000565b5b021790555050611de2565b6002600681111561198457611983614000565b5b81600681111561199757611996614000565b5b03611a30576000838360209080926119b193929190614be5565b906119bc9190614c8a565b9050600073__$a132ddf224bcaf7b77631cdf10c807360d$__63a2040cee9091836040518363ffffffff1660e01b81526004016119fa929190614aaa565b60006040518083038186803b158015611a1257600080fd5b505af4158015611a26573d6000803e3d6000fd5b5050505050611de1565b60036006811115611a4457611a43614000565b5b816006811115611a5757611a56614000565b5b03611af257600083836020908092611a7193929190614be5565b810190611a7e9190614e93565b9050600173__$a132ddf224bcaf7b77631cdf10c807360d$__63cc76f9319091836040518363ffffffff1660e01b8152600401611abc929190614f3e565b60006040518083038186803b158015611ad457600080fd5b505af4158015611ae8573d6000803e3d6000fd5b5050505050611de0565b60056006811115611b0657611b05614000565b5b816006811115611b1957611b18614000565b5b03611d0457600083836020908092611b3393929190614be5565b810190611b409190614fb7565b90506000816000015190506000826020015190506000806000848152602001908152602001600020600501905060006007600085815260200190815260200160002060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673__$a132ddf224bcaf7b77631cdf10c807360d$__6343b03b5d90918385600101546003546103e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518763ffffffff1660e01b8152600401611c4f969594939291906144f7565b60006040518083038186803b158015611c6757600080fd5b505af4158015611c7b573d6000803e3d6000fd5b50505050600180600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff02191690836002811115611cf557611cf4614000565b5b02179055505050505050611ddf565b60046006811115611d1857611d17614000565b5b816006811115611d2b57611d2a614000565b5b03611dde57600083836020908092611d4593929190614be5565b810190611d529190615048565b905060008160000151905060008260200151905060006001600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508360400151816000016000828254611dd29190614ad3565b92505081905550505050505b5b5b5b5b5b505050505050565b600081611df7906150c6565b60601c9050919050565b611e096133f9565b80606001356000801b6000808381526020019081526020016000206000015403611e5f576040517f5dcaf2d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260600135905060008360000135905060006001600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611f4f576040517fb8cee9f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060008760600135815260200190815260200160002090508060070154831015611fb257826040517fd9cf167e000000000000000000000000000000000000000000000000000000008152600401611fa99190613f36565b60405180910390fd5b6000826000015484611fc491906148a7565b9050600080600087815260200190815260200160002060050190506000349050600073ffffffffffffffffffffffffffffffffffffffff168260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146120925761208d3330858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16613469909392919063ffffffff16565b6120e6565b823410156120d757346040517fd9cf167e0000000000000000000000000000000000000000000000000000000081526004016120ce9190613f36565b60405180910390fd5b82816120e391906148a7565b90505b600173__$a132ddf224bcaf7b77631cdf10c807360d$__63cc76f93190918b6040518363ffffffff1660e01b81526004016121229291906151bd565b60006040518083038186803b15801561213a57600080fd5b505af415801561214e573d6000803e3d6000fd5b5050505060008060038b60405160200161216a93929190615276565b6040516020818303038152906040529050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4a8b2f983600860009054906101000a900461ffff1633856040518563ffffffff1660e01b81526004016121eb9392919061473b565b6000604051808303818588803b15801561220457600080fd5b505af1158015612218573d6000803e3d6000fd5b505050505050505050505050505061222e613450565b50565b60045481565b60006122416135fc565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff1614801561228f5750825b9050600060018367ffffffffffffffff161480156122c4575060003073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156122d2575080155b15612309576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156123595760018560000160086101000a81548160ff0219169083151502179055505b61237486600001602081019061236f919061420b565b613624565b61237c6136aa565b8580360381019061238d919061534d565b73__$6f3146d13761fe4efe0c3dc8c4b43c2873$__63cf5bfc7c90916103e86040518363ffffffff1660e01b81526004016123c9929190615404565b60006040518083038186803b1580156123e157600080fd5b505af41580156123f5573d6000803e3d6000fd5b5050505085608001356003819055508560a00135600481905550856060016020810190612422919061420b565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550856020016020810190612475919061542d565b600860006101000a81548161ffff021916908361ffff1602179055508560400160208101906124a4919061420b565b600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083156125405760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516125379190615495565b60405180910390a15b505050505050565b60076020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900461ffff16908060010160169054906101000a900461ffff16905085565b6001602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060020160009054906101000a900460ff16908060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050154905087565b61268b6136b4565b612695600061373b565b565b6000806126a2613812565b90508060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b60035481565b6000806126ff61383a565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6127346133f9565b60008160000180360381019061274a9190615566565b90508073__$5b078b893398f17544ec956d77642311f9$__6357fc12b090916040518263ffffffff1660e01b81526004016127859190615662565b60006040518083038186803b15801561279d57600080fd5b505af41580156127b1573d6000803e3d6000fd5b5050505060006127c033613862565b73__$a132ddf224bcaf7b77631cdf10c807360d$__6331ceee549091336040518363ffffffff1660e01b81526004016127fa92919061567e565b602060405180830381865af4158015612817573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061283b91906156bc565b9050600073__$a132ddf224bcaf7b77631cdf10c807360d$__632296d7e090918484336040518563ffffffff1660e01b815260040161287d94939291906156e9565b60006040518083038186803b15801561289557600080fd5b505af41580156128a9573d6000803e3d6000fd5b5050505060006040518060a001604052806001808111156128cd576128cc614000565b5b8152602001856101200160208101906128e6919061420b565b73ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600860009054906101000a900461ffff1661ffff1681526020018561016001602081019061294c919061542d565b61ffff168152509050806007600084815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600181111561299457612993614000565b5b021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160010160146101000a81548161ffff021916908361ffff16021790555060808201518160010160166101000a81548161ffff021916908361ffff1602179055509050506000349050600073ffffffffffffffffffffffffffffffffffffffff1684600001516000015173ffffffffffffffffffffffffffffffffffffffff1603612b1757836000015160200151341015612afc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612af39061578e565b60405180910390fd5b83600001516020015181612b1091906148a7565b9050612b55565b612b54333086600001516020015187600001516000015173ffffffffffffffffffffffffffffffffffffffff16613469909392919063ffffffff16565b5b60006040518060a001604052808660200151815260200187610120016020810190612b80919061420b565b73ffffffffffffffffffffffffffffffffffffffff16815260200187610140016020810190612baf919061420b565b73ffffffffffffffffffffffffffffffffffffffff1681526020018660c00151151581526020018660a00151815250905060008060008684604051602001612bfa9493929190615854565b6040516020818303038152906040529050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4a8b2f984600860009054906101000a900461ffff1633856040518563ffffffff1660e01b8152600401612c7b9392919061473b565b6000604051808303818588803b158015612c9457600080fd5b505af1158015612ca8573d6000803e3d6000fd5b5050505050847f8b82d32987f9a4ae1bc7868a6f104edb711227ec3c9fccb0416a14fcc29bec5a60405160405180910390a2505050505050612ce8613450565b50565b6005602052816000526040600020602052806000526040600020600091509150505481565b612d186133f9565b806000801b6000808381526020019081526020016000206000015403612d6a576040517f5dcaf2d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603612e48576040517fac96c2bd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612ed1576040517f978f045600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280811115612ee457612ee3614000565b5b8160020160009054906101000a900460ff166002811115612f0857612f07614000565b5b14612f5b578060020160009054906101000a900460ff166040517f64b08c06000000000000000000000000000000000000000000000000000000008152600401612f529190614495565b60405180910390fd5b60008160020160006101000a81548160ff02191690836002811115612f8357612f82614000565b5b021790555060008060008581526020019081526020016000206005019050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613075576130708260020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683600001548360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166138c79092919063ffffffff16565b6130e5565b8160020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc83600001549081150290604051600060405180830381858888f193505050501580156130e3573d6000803e3d6000fd5b505b6000806005866040516020016130fd93929190614a64565b6040516020818303038152906040529050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4a8b2f934600860009054906101000a900461ffff1633856040518563ffffffff1660e01b815260040161317e9392919061473b565b6000604051808303818588803b15801561319757600080fd5b505af11580156131ab573d6000803e3d6000fd5b5050505050505050506131bc613450565b50565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6131ed6136b4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361325f5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016132569190613eb6565b60405180910390fd5b6132688161373b565b50565b60006020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806005016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250509080600701549080600801549080600901549080600a01549080600b01549080600c0160009054906101000a900460ff1690508c565b600061340361398f565b90506002816000015403613443576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002816000018190555050565b600061345a61398f565b90506001816000018190555050565b600084905060008173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016134ab92919061446c565b602060405180830381865afa1580156134c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134ec91906158af565b9050828110156135355780836040517f7c8db62f00000000000000000000000000000000000000000000000000000000815260040161352c9291906144b0565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040518463ffffffff1660e01b8152600401613572939291906158dc565b6020604051808303816000875af1158015613591573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135b59190614a37565b6135f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016135eb9061595f565b60405180910390fd5b505050505050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b61362c6139b7565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361369e5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016136959190613eb6565b60405180910390fd5b6136a78161373b565b50565b6136b26139b7565b565b6136bc6139f7565b73ffffffffffffffffffffffffffffffffffffffff166136da6126f4565b73ffffffffffffffffffffffffffffffffffffffff1614613739576136fd6139f7565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016137309190613eb6565b60405180910390fd5b565b600061374561383a565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb00905090565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b60008061386d613812565b90508060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055915050919050565b60008390508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b81526004016139079291906149e2565b6020604051808303816000875af1158015613926573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061394a9190614a37565b613989576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016139809061595f565b60405180910390fd5b50505050565b60007f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00905090565b6139bf6139ff565b6139f5576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600033905090565b6000613a096135fc565b60000160089054906101000a900460ff16905090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600060408284031215613a4e57613a4d613a33565b5b81905092915050565b600060408284031215613a6d57613a6c613a29565b5b6000613a7b84828501613a38565b91505092915050565b600060408284031215613a9a57613a99613a33565b5b81905092915050565b600060408284031215613ab957613ab8613a29565b5b6000613ac784828501613a84565b91505092915050565b600060208284031215613ae657613ae5613a33565b5b81905092915050565b600060208284031215613b0557613b04613a29565b5b6000613b1384828501613ad0565b91505092915050565b600060608284031215613b3257613b31613a33565b5b81905092915050565b600060608284031215613b5157613b50613a29565b5b6000613b5f84828501613b1c565b91505092915050565b600061ffff82169050919050565b613b7f81613b68565b8114613b8a57600080fd5b50565b600081359050613b9c81613b76565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b613bf582613bac565b810181811067ffffffffffffffff82111715613c1457613c13613bbd565b5b80604052505050565b6000613c27613a1f565b9050613c338282613bec565b919050565b600067ffffffffffffffff821115613c5357613c52613bbd565b5b613c5c82613bac565b9050602081019050919050565b82818337600083830152505050565b6000613c8b613c8684613c38565b613c1d565b905082815260208101848484011115613ca757613ca6613ba7565b5b613cb2848285613c69565b509392505050565b600082601f830112613ccf57613cce613ba2565b5b8135613cdf848260208601613c78565b91505092915050565b600067ffffffffffffffff82169050919050565b613d0581613ce8565b8114613d1057600080fd5b50565b600081359050613d2281613cfc565b92915050565b600080fd5b600080fd5b60008083601f840112613d4857613d47613ba2565b5b8235905067ffffffffffffffff811115613d6557613d64613d28565b5b602083019150836001820283011115613d8157613d80613d2d565b5b9250929050565b600080600080600060808688031215613da457613da3613a29565b5b6000613db288828901613b8d565b955050602086013567ffffffffffffffff811115613dd357613dd2613a2e565b5b613ddf88828901613cba565b9450506040613df088828901613d13565b935050606086013567ffffffffffffffff811115613e1157613e10613a2e565b5b613e1d88828901613d32565b92509250509295509295909350565b600060208284031215613e4257613e41613a29565b5b600082013567ffffffffffffffff811115613e6057613e5f613a2e565b5b613e6c84828501613cba565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613ea082613e75565b9050919050565b613eb081613e95565b82525050565b6000602082019050613ecb6000830184613ea7565b92915050565b600060a08284031215613ee757613ee6613a33565b5b81905092915050565b600060a08284031215613f0657613f05613a29565b5b6000613f1484828501613ed1565b91505092915050565b6000819050919050565b613f3081613f1d565b82525050565b6000602082019050613f4b6000830184613f27565b92915050565b600060c08284031215613f6757613f66613a33565b5b81905092915050565b600060c08284031215613f8657613f85613a29565b5b6000613f9484828501613f51565b91505092915050565b6000819050919050565b613fb081613f9d565b8114613fbb57600080fd5b50565b600081359050613fcd81613fa7565b92915050565b600060208284031215613fe957613fe8613a29565b5b6000613ff784828501613fbe565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281106140405761403f614000565b5b50565b60008190506140518261402f565b919050565b600061406182614043565b9050919050565b61407181614056565b82525050565b61408081613b68565b82525050565b600060a08201905061409b6000830188614068565b6140a86020830187613ea7565b6140b56040830186613ea7565b6140c26060830185614077565b6140cf6080830184614077565b9695505050505050565b6140e281613e95565b81146140ed57600080fd5b50565b6000813590506140ff816140d9565b92915050565b6000806040838503121561411c5761411b613a29565b5b600061412a85828601613fbe565b925050602061413b858286016140f0565b9150509250929050565b61414e81613f9d565b82525050565b6003811061416557614164614000565b5b50565b600081905061417682614154565b919050565b600061418682614168565b9050919050565b6141968161417b565b82525050565b600060e0820190506141b1600083018a613f27565b6141be6020830189614145565b6141cb604083018861418d565b6141d86060830187613ea7565b6141e56080830186613ea7565b6141f260a0830185613f27565b6141ff60c0830184613f27565b98975050505050505050565b60006020828403121561422157614220613a29565b5b600061422f848285016140f0565b91505092915050565b6000610180828403121561424f5761424e613a33565b5b81905092915050565b6000610180828403121561426f5761426e613a29565b5b600061427d84828501614238565b91505092915050565b6000819050919050565b60006142ab6142a66142a184613e75565b614286565b613e75565b9050919050565b60006142bd82614290565b9050919050565b60006142cf826142b2565b9050919050565b6142df816142c4565b82525050565b60006020820190506142fa60008301846142d6565b92915050565b6004811061431157614310614000565b5b50565b600081905061432282614300565b919050565b600061433282614314565b9050919050565b61434281614327565b82525050565b61435181613e95565b82525050565b61436081613f1d565b82525050565b60408201600082015161437c6000850182614348565b50602082015161438f6020850182614357565b50505050565b60008115159050919050565b6143aa81614395565b82525050565b60006101c0820190506143c6600083018f614145565b6143d3602083018e614339565b6143e0604083018d613ea7565b6143ed606083018c614366565b6143fa60a083018b613ea7565b61440760c083018a614366565b614415610100830189613f27565b614423610120830188613f27565b614431610140830187613f27565b61443f610160830186613f27565b61444d610180830185613f27565b61445b6101a08301846143a1565b9d9c50505050505050505050505050565b60006040820190506144816000830185613ea7565b61448e6020830184613ea7565b9392505050565b60006020820190506144aa600083018461418d565b92915050565b60006040820190506144c56000830185613f27565b6144d26020830184613f27565b9392505050565b6144e281613e95565b82525050565b6144f181613f1d565b82525050565b600060c08201905061450c60008301896144d9565b61451960208301886144d9565b61452660408301876144e8565b61453360608301866144e8565b61454060808301856144e8565b61454d60a08301846144d9565b979650505050505050565b6000819050919050565b600060ff82169050919050565b600061458a61458561458084614558565b614286565b614562565b9050919050565b61459a8161456f565b82525050565b600781106145b1576145b0614000565b5b50565b60008190506145c2826145a0565b919050565b60006145d2826145b4565b9050919050565b6145e2816145c7565b82525050565b60006145f76020840184613fbe565b905092915050565b61460881613f9d565b82525050565b600061461d60208401846140f0565b905092915050565b6040820161463660008301836145e8565b61464360008501826145ff565b50614651602083018361460e565b61465e6020850182614348565b50505050565b60006080820190506146796000830186614591565b61468660208301856145d9565b6146936040830184614625565b949350505050565b60006146a682613e75565b9050919050565b6146b68161469b565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156146f65780820151818401526020810190506146db565b60008484015250505050565b600061470d826146bc565b61471781856146c7565b93506147278185602086016146d8565b61473081613bac565b840191505092915050565b60006060820190506147506000830186614077565b61475d60208301856146ad565b818103604083015261476f8184614702565b9050949350505050565b600080fd5b60006040828403121561479457614793614779565b5b61479e6040613c1d565b905060006147ae84828501613fbe565b60008301525060206147c2848285016140f0565b60208301525092915050565b6000604082840312156147e4576147e3613a29565b5b60006147f28482850161477e565b91505092915050565b61480481613f9d565b82525050565b61481381613e95565b82525050565b60408201600082015161482f60008501826147fb565b506020820151614842602085018261480a565b50505050565b8082525050565b60006060820190506148646000830185614819565b6148716040830184614848565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006148b282613f1d565b91506148bd83613f1d565b92508282039050818111156148d5576148d4614878565b5b92915050565b600060e0820190506148f0600083018a6144d9565b6148fd60208301896144d9565b61490a60408301886144d9565b61491760608301876144e8565b61492460808301866144e8565b61493160a08301856144e8565b61493e60c08301846144d9565b98975050505050505050565b6040820161495b60008301836145e8565b61496860008501826145ff565b50614976602083018361460e565b6149836020850182614348565b50505050565b600060808201905061499e6000830186614591565b6149ab60208301856145d9565b6149b8604083018461494a565b949350505050565b8082525050565b60006020820190506149dc60008301846149c0565b92915050565b60006040820190506149f76000830185613ea7565b614a046020830184613f27565b9392505050565b614a1481614395565b8114614a1f57600080fd5b50565b600081519050614a3181614a0b565b92915050565b600060208284031215614a4d57614a4c613a29565b5b6000614a5b84828501614a22565b91505092915050565b6000606082019050614a796000830186614591565b614a8660208301856145d9565b614a936040830184614145565b949350505050565b614aa481613f9d565b82525050565b6000604082019050614abf6000830185614848565b614acc6020830184614a9b565b9392505050565b6000614ade82613f1d565b9150614ae983613f1d565b9250828201905080821115614b0157614b00614878565b5b92915050565b614b1081613f1d565b8114614b1b57600080fd5b50565b600081359050614b2d81614b07565b92915050565b6000614b426020840184614b1e565b905092915050565b60608201614b5b60008301836145e8565b614b6860008501826145ff565b50614b76602083018361460e565b614b836020850182614348565b50614b916040830183614b33565b614b9e6040850182614357565b50505050565b600060a082019050614bb96000830186614591565b614bc660208301856145d9565b614bd36040830184614b4a565b949350505050565b600080fd5b600080fd5b60008085851115614bf957614bf8614bdb565b5b83861115614c0a57614c09614be0565b5b6001850283019150848603905094509492505050565b60078110614c2d57600080fd5b50565b600081359050614c3f81614c20565b92915050565b600060208284031215614c5b57614c5a613a29565b5b6000614c6984828501614c30565b91505092915050565b600082905092915050565b600082821b905092915050565b6000614c968383614c72565b82614ca18135613f9d565b92506020821015614ce157614cdc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802614c7d565b831692505b505092915050565b600060408284031215614cff57614cfe614779565b5b614d096040613c1d565b90506000614d19848285016140f0565b6000830152506020614d2d84828501614b1e565b60208301525092915050565b600081359050614d4881614a0b565b92915050565b600060c08284031215614d6457614d63614779565b5b614d6e60a0613c1d565b90506000614d7e84828501614ce9565b6000830152506040614d92848285016140f0565b6020830152506060614da6848285016140f0565b6040830152506080614dba84828501614d39565b60608301525060a0614dce84828501614b1e565b60808301525092915050565b600060c08284031215614df057614def613a29565b5b6000614dfe84828501614d4e565b91505092915050565b600060a08284031215614e1d57614e1c614779565b5b614e2760a0613c1d565b90506000614e3784828501614b1e565b6000830152506020614e4b848285016140f0565b6020830152506040614e5f848285016140f0565b6040830152506060614e7384828501613fbe565b6060830152506080614e8784828501614b1e565b60808301525092915050565b600060a08284031215614ea957614ea8613a29565b5b6000614eb784828501614e07565b91505092915050565b8082525050565b614ed081613f1d565b82525050565b60a082016000820151614eec6000850182614ec7565b506020820151614eff602085018261480a565b506040820151614f12604085018261480a565b506060820151614f2560608501826147fb565b506080820151614f386080850182614ec7565b50505050565b600060c082019050614f536000830185614ec0565b614f606020830184614ed6565b9392505050565b600060408284031215614f7d57614f7c614779565b5b614f876040613c1d565b90506000614f9784828501613fbe565b6000830152506020614fab848285016140f0565b60208301525092915050565b600060408284031215614fcd57614fcc613a29565b5b6000614fdb84828501614f67565b91505092915050565b600060608284031215614ffa57614ff9614779565b5b6150046060613c1d565b9050600061501484828501613fbe565b6000830152506020615028848285016140f0565b602083015250604061503c84828501614b1e565b60408301525092915050565b60006060828403121561505e5761505d613a29565b5b600061506c84828501614fe4565b91505092915050565b6000819050602082019050919050565b60007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b60006150bd8251615085565b80915050919050565b60006150d1826146bc565b826150db84615075565b90506150e6816150b1565b92506014821015615126576151217fffffffffffffffffffffffffffffffffffffffff00000000000000000000000083601403600802614c7d565b831692505b5050919050565b60a0820161513e6000830183614b33565b61514b6000850182614ec7565b50615159602083018361460e565b615166602085018261480a565b50615174604083018361460e565b615181604085018261480a565b5061518f60608301836145e8565b61519c60608501826147fb565b506151aa6080830183614b33565b6151b76080850182614ec7565b50505050565b600060c0820190506151d26000830185614ec0565b6151df602083018461512d565b9392505050565b60a082016151f76000830183614b33565b6152046000850182614357565b50615212602083018361460e565b61521f6020850182614348565b5061522d604083018361460e565b61523a6040850182614348565b5061524860608301836145e8565b61525560608501826145ff565b506152636080830183614b33565b6152706080850182614357565b50505050565b600060e08201905061528b6000830186614591565b61529860208301856145d9565b6152a560408301846151e6565b949350505050565b600060c082840312156152c3576152c2614779565b5b6152cd60c0613c1d565b905060006152dd848285016140f0565b60008301525060206152f184828501613b8d565b6020830152506040615305848285016140f0565b6040830152506060615319848285016140f0565b606083015250608061532d84828501614b1e565b60808301525060a061534184828501614b1e565b60a08301525092915050565b600060c0828403121561536357615362613a29565b5b6000615371848285016152ad565b91505092915050565b61538381613b68565b82525050565b60c08201600082015161539f600085018261480a565b5060208201516153b2602085018261537a565b5060408201516153c5604085018261480a565b5060608201516153d8606085018261480a565b5060808201516153eb6080850182614ec7565b5060a08201516153fe60a0850182614ec7565b50505050565b600060e0820190506154196000830185615389565b61542660c08301846144e8565b9392505050565b60006020828403121561544357615442613a29565b5b600061545184828501613b8d565b91505092915050565b6000819050919050565b600061547f61547a6154758461545a565b614286565b613ce8565b9050919050565b61548f81615464565b82525050565b60006020820190506154aa6000830184615486565b92915050565b600061012082840312156154c7576154c6614779565b5b6154d160e0613c1d565b905060006154e184828501614ce9565b60008301525060406154f584828501614ce9565b6020830152506080615509848285016140f0565b60408301525060a061551d848285016140f0565b60608301525060c061553184828501614b1e565b60808301525060e061554584828501614b1e565b60a08301525061010061555a84828501614d39565b60c08301525092915050565b6000610120828403121561557d5761557c613a29565b5b600061558b848285016154b0565b91505092915050565b6040820160008201516155aa600085018261480a565b5060208201516155bd6020850182614ec7565b50505050565b6155cc81614395565b82525050565b610120820160008201516155e96000850182615594565b5060208201516155fc6040850182615594565b50604082015161560f608085018261480a565b50606082015161562260a085018261480a565b50608082015161563560c0850182614ec7565b5060a082015161564860e0850182614ec7565b5060c082015161565c6101008501826155c3565b50505050565b60006101208201905061567860008301846155d2565b92915050565b600060408201905061569360008301856144e8565b6156a060208301846144d9565b9392505050565b6000815190506156b681613fa7565b92915050565b6000602082840312156156d2576156d1613a29565b5b60006156e0848285016156a7565b91505092915050565b6000610180820190506156ff6000830187614848565b61570c60208301866155d2565b61571a610140830185614a9b565b6157286101608301846144d9565b95945050505050565b600082825260208201905092915050565b7f4e6f7420656e6f75676820657468657200000000000000000000000000000000600082015250565b6000615778601083615731565b915061578382615742565b602082019050919050565b600060208201905081810360008301526157a78161576b565b9050919050565b6040820160008201516157c46000850182614348565b5060208201516157d76020850182614357565b50505050565b6157e681614395565b82525050565b60c08201600082015161580260008501826157ae565b5060208201516158156040850182614348565b5060408201516158286060850182614348565b50606082015161583b60808501826157dd565b50608082015161584e60a0850182614357565b50505050565b60006101208201905061586a6000830187614591565b61587760208301866145d9565b6158846040830185614145565b61589160608301846157ec565b95945050505050565b6000815190506158a981614b07565b92915050565b6000602082840312156158c5576158c4613a29565b5b60006158d38482850161589a565b91505092915050565b60006060820190506158f16000830186613ea7565b6158fe6020830185613ea7565b61590b6040830184613f27565b949350505050565b7f4661696c656420746f207472616e736665722066726f6d000000000000000000600082015250565b6000615949601783615731565b915061595482615913565b602082019050919050565b600060208201905081810360008301526159788161593c565b905091905056fea2646970667358221220f8ec098048aaa0e8df4ff1df51feb5e6956d334e48d4be430223a928315ec69e64736f6c63430008140033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "provided";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "expectedExpiry";
            readonly type: "uint256";
        }];
        readonly name: "BidAlreadyExpired";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "BidAlreadyPlaced";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "BidDoesNotExist";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "BidNotAllowed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "enum IAtomicSwapBase.BidStatus";
            readonly name: "status";
            readonly type: "uint8";
        }];
        readonly name: "BidNotInPlacedStatus";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "currentNonce";
            readonly type: "uint256";
        }];
        readonly name: "InvalidAccountNonce";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "contractAddress";
            readonly type: "address";
        }];
        readonly name: "InvalidContractAddress";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "provided";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "maximum";
            readonly type: "uint256";
        }];
        readonly name: "InvalidExpirationTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidInitialization";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidMinimumBidLimit";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "MismatchedBidAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoBidPlaced";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "allowance";
            readonly type: "uint256";
        }];
        readonly name: "NotAllowedTransferAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "real";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "expected";
            readonly type: "uint256";
        }];
        readonly name: "NotEnoughFund";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotInitializing";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "OrderAlreadyCompleted";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "OrderAlreadyExists";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "OrderDoesNotExist";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "OrderNotAllowTake";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "OwnableInvalidOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "OwnableUnauthorizedAccount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ReentrancyGuardReentrantCall";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "caller";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "expected";
            readonly type: "address";
        }];
        readonly name: "UnauthorizedAcceptAction";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnauthorizedCancelAction";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnauthorizedSender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnauthorizedTakeAction";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnsupportedTokenPair";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "orderID";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "AcceptedBid";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "id";
            readonly type: "bytes32";
        }];
        readonly name: "AtomicSwapOrderCanceled";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "id";
            readonly type: "bytes32";
        }];
        readonly name: "AtomicSwapOrderCreated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "maker";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "taker";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "id";
            readonly type: "bytes32";
        }];
        readonly name: "AtomicSwapOrderTook";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "orderID";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }];
        readonly name: "CanceledBid";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint64";
            readonly name: "version";
            readonly type: "uint64";
        }];
        readonly name: "Initialized";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "orderID";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "ReceivedNewBid";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "orderID";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "UpdatedBid";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "orderID";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "bidder";
                readonly type: "address";
            }];
            readonly internalType: "struct IAtomicSwapBase.AcceptBidMsg";
            readonly name: "acceptBidMsg";
            readonly type: "tuple";
        }];
        readonly name: "acceptBid";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "bids";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32";
            readonly name: "order";
            readonly type: "bytes32";
        }, {
            readonly internalType: "enum IAtomicSwapBase.BidStatus";
            readonly name: "status";
            readonly type: "uint8";
        }, {
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "bidderReceiver";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "receiveTimestamp";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "expireTimestamp";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bridge";
        readonly outputs: readonly [{
            readonly internalType: "contract ISideLzAppUpgradable";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "buyerFeeRate";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "bytesToAddress";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_orderID";
            readonly type: "bytes32";
        }];
        readonly name: "cancelBid";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "orderID";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct IAtomicSwapBase.CancelSwapMsg";
            readonly name: "cancelswap";
            readonly type: "tuple";
        }];
        readonly name: "cancelSwap";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "counteroffers";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "admin";
                readonly type: "address";
            }, {
                readonly internalType: "uint16";
                readonly name: "chainID";
                readonly type: "uint16";
            }, {
                readonly internalType: "address";
                readonly name: "bridge";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "treasury";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "sellerFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "buyerFee";
                readonly type: "uint256";
            }];
            readonly internalType: "struct IInterchainAtomicSwap.InitialParams";
            readonly name: "_params";
            readonly type: "tuple";
        }];
        readonly name: "initialize";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "token";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }];
                    readonly internalType: "struct IAtomicSwapBase.Coin";
                    readonly name: "sellToken";
                    readonly type: "tuple";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "token";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "amount";
                        readonly type: "uint256";
                    }];
                    readonly internalType: "struct IAtomicSwapBase.Coin";
                    readonly name: "buyToken";
                    readonly type: "tuple";
                }, {
                    readonly internalType: "address";
                    readonly name: "maker";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "desiredTaker";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "minBidAmount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "expireAt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bool";
                    readonly name: "acceptBid";
                    readonly type: "bool";
                }];
                readonly internalType: "struct IAtomicSwapBase.MakeSwapMsg";
                readonly name: "base";
                readonly type: "tuple";
            }, {
                readonly internalType: "address";
                readonly name: "makerReceiver";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "desiredTaker";
                readonly type: "address";
            }, {
                readonly internalType: "uint16";
                readonly name: "dstChainID";
                readonly type: "uint16";
            }];
            readonly internalType: "struct IInterchainAtomicSwap.ICMakeSwapMsg";
            readonly name: "icMakeSwap";
            readonly type: "tuple";
        }];
        readonly name: "makeSwap";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "nonces";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "_srcChainID";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes";
            readonly name: "_srcAddress";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint64";
            readonly name: "_nonce";
            readonly type: "uint64";
        }, {
            readonly internalType: "bytes";
            readonly name: "_payload";
            readonly type: "bytes";
        }];
        readonly name: "onReceivePacket";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "bidAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "bidder";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "bidderReceiver";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "orderID";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "expireTimestamp";
                readonly type: "uint256";
            }];
            readonly internalType: "struct IAtomicSwapBase.PlaceBidMsg";
            readonly name: "placeBidMsg";
            readonly type: "tuple";
        }];
        readonly name: "placeBid";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "sellerFeeRate";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly name: "swapOrder";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "id";
            readonly type: "bytes32";
        }, {
            readonly internalType: "enum IAtomicSwapBase.OrderStatus";
            readonly name: "status";
            readonly type: "uint8";
        }, {
            readonly internalType: "address";
            readonly name: "maker";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }];
            readonly internalType: "struct IAtomicSwapBase.Coin";
            readonly name: "sellToken";
            readonly type: "tuple";
        }, {
            readonly internalType: "address";
            readonly name: "taker";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }];
            readonly internalType: "struct IAtomicSwapBase.Coin";
            readonly name: "buyToken";
            readonly type: "tuple";
        }, {
            readonly internalType: "uint256";
            readonly name: "minBidAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "createdAt";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "canceledAt";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "completedAt";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "expiredAt";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "acceptBid";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly name: "swapOrderITCParams";
        readonly outputs: readonly [{
            readonly internalType: "enum IInterchainAtomicSwap.Side";
            readonly name: "side";
            readonly type: "uint8";
        }, {
            readonly internalType: "address";
            readonly name: "makerReceiver";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "takerReceiver";
            readonly type: "address";
        }, {
            readonly internalType: "uint16";
            readonly name: "srcChainID";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint16";
            readonly name: "dstChainID";
            readonly type: "uint16";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "orderID";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "takerReceiver";
                readonly type: "address";
            }];
            readonly internalType: "struct IAtomicSwapBase.TakeSwapMsg";
            readonly name: "takeswap";
            readonly type: "tuple";
        }];
        readonly name: "takeSwap";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "orderID";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "bidder";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "addition";
                readonly type: "uint256";
            }];
            readonly internalType: "struct IAtomicSwapBase.UpdateBidMsg";
            readonly name: "updateBidMsg";
            readonly type: "tuple";
        }];
        readonly name: "updateBid";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }];
    static createInterface(): InterchainAtomicSwapInterface;
    static connect(address: string, runner?: ContractRunner | null): InterchainAtomicSwap;
}
export interface InterchainAtomicSwapLibraryAddresses {
    ["contracts/abstracts/libs/AtomicSwapHelper.sol:AtomicSwapHelper"]: string;
    ["contracts/abstracts/libs/AtomicSwapMsgValidator.sol:AtomicSwapMsgValidator"]: string;
    ["contracts/interchain_atomicswap/libs/InterchainAtomicSwapLogic.sol:InterchainAtomicSwapLogic"]: string;
}
export {};
