import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { InchainAtomicSwap, InchainAtomicSwapInterface } from "../../../contracts/inchain_atomicswap/InchainAtomicSwap";
type InchainAtomicSwapConstructorParams = [linkLibraryAddresses: InchainAtomicSwapLibraryAddresses, signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class InchainAtomicSwap__factory extends ContractFactory {
    constructor(...args: InchainAtomicSwapConstructorParams);
    static linkBytecode(linkLibraryAddresses: InchainAtomicSwapLibraryAddresses): string;
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<InchainAtomicSwap & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): InchainAtomicSwap__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b506141f3806100206000396000f3fe6080604052600436106101095760003560e01c80638d241c7b11610095578063df7cec2811610064578063df7cec28146102f7578063dfa2e8e614610313578063eb990c591461033c578063f2fde38b14610365578063fca6caa11461038e57610109565b80638d241c7b1461024a5780638da5cb5b14610273578063a743a3d01461029e578063d2a25283146102db57610109565b806352c95b2a116100dc57806352c95b2a1461017e57806353f10c801461019a57806366e929bf146101c5578063715018a61461020857806389f681901461021f57610109565b8063022066611461010e57806306be619c1461012a57806337be0022146101465780633d9bd2fc14610162575b600080fd5b6101286004803603810190610123919061317a565b6103d6565b005b610144600480360381019061013f91906131c6565b61098d565b005b610160600480360381019061015b9190613212565b610e38565b005b61017c6004803603810190610177919061325e565b611300565b005b610198600480360381019061019391906132aa565b611691565b005b3480156101a657600080fd5b506101af611a36565b6040516101bc91906132f0565b60405180910390f35b3480156101d157600080fd5b506101ec60048036038101906101e7919061339f565b611a3c565b6040516101ff9796959493929190613474565b60405180910390f35b34801561021457600080fd5b5061021d611ad8565b005b34801561022b57600080fd5b50610234611aec565b60405161024191906132f0565b60405180910390f35b34801561025657600080fd5b50610271600480360381019061026c9190613502565b611af2565b005b34801561027f57600080fd5b50610288611cc5565b604051610295919061352f565b60405180910390f35b3480156102aa57600080fd5b506102c560048036038101906102c0919061339f565b611cfd565b6040516102d291906132f0565b60405180910390f35b6102f560048036038101906102f0919061356a565b611d22565b005b610311600480360381019061030c9190613598565b6120bd565b005b34801561031f57600080fd5b5061033a60048036038101906103359190613502565b612503565b005b34801561034857600080fd5b50610363600480360381019061035e91906135f1565b6126d6565b005b34801561037157600080fd5b5061038c60048036038101906103879190613658565b6129ae565b005b34801561039a57600080fd5b506103b560048036038101906103b09190613598565b612a34565b6040516103cd9c9b9a99989796959493929190613735565b60405180910390f35b6103de612bc2565b80600001356000801b6000808381526020019081526020016000206000015403610434576040517f5dcaf2d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260000135905060008360200160208101906104529190613658565b9050600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036104ba576040517f0809490800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806000848152602001908152602001600020905080600c0160009054906101000a900460ff16610518576040517f3c24fafc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105d2578060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336040517f0500cb4c0000000000000000000000000000000000000000000000000000000081526004016105c99291906137f1565b60405180910390fd5b60006001600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600280811115610639576106386133ee565b5b8160020160009054906101000a900460ff16600281111561065d5761065c6133ee565b5b146106b0578060020160009054906101000a900460ff166040517f64b08c060000000000000000000000000000000000000000000000000000000081526004016106a7919061381a565b60405180910390fd5b42816005015410156106ff578060050154426040517f1d3556390000000000000000000000000000000000000000000000000000000081526004016106f6929190613835565b60405180910390fd5b60018160020160006101000a81548160ff02191690836002811115610727576107266133ee565b5b021790555060008260020190508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673__$a132ddf224bcaf7b77631cdf10c807360d$__6343b03b5d90918460020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600101546004546103e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518763ffffffff1660e01b81526004016107ff9695949392919061387c565b60006040518083038186803b15801561081757600080fd5b505af415801561082b573d6000803e3d6000fd5b5050505060008360050190508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673__$a132ddf224bcaf7b77631cdf10c807360d$__6343b03b5d90918660010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686600001546003546103e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518763ffffffff1660e01b81526004016109029695949392919061387c565b60006040518083038186803b15801561091a57600080fd5b505af415801561092e573d6000803e3d6000fd5b5050505082600001548573ffffffffffffffffffffffffffffffffffffffff16877fadd1d5b6c827fee45fa32e72964c9d43d2191c9b8b083889fb2e3f468c71856860405160405180910390a45050505050505061098a612c19565b50565b610995612bc2565b80600001356000801b60008083815260200190815260200160002060000154036109eb576040517f5dcaf2d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806000846000013581526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614158015610ab657503373ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b15610aed576040517fbe544a2b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115610b0157610b006133ee565b5b8160010160009054906101000a900460ff166003811115610b2557610b246133ee565b5b03610b5c576040517f0368368700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028160010160006101000a81548160ff02191690836003811115610b8457610b836133ee565b5b02179055504281600a01819055508060020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673__$a132ddf224bcaf7b77631cdf10c807360d$__6343b03b5d9091856020016020810190610bff9190613658565b84600201600101546004546103e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518763ffffffff1660e01b8152600401610c519695949392919061387c565b60006040518083038186803b158015610c6957600080fd5b505af4158015610c7d573d6000803e3d6000fd5b505050508060050160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673__$a132ddf224bcaf7b77631cdf10c807360d$__6311f1248b9091338460010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685600501600101546003546103e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518863ffffffff1660e01b8152600401610d5497969594939291906138dd565b60006040518083038186803b158015610d6c57600080fd5b505af4158015610d80573d6000803e3d6000fd5b5050505082600001358160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f6bf7309f141d1b44e414f1fc04d98491cd0acf98f0f1e5ad885d0a7ce164e6fa60405160405180910390a45050610e35612c19565b50565b610e40612bc2565b80600001356000801b6000808381526020019081526020016000206000015403610e96576040517f5dcaf2d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060008460000135815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f39576040517f978f045600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006003811115610f4d57610f4c6133ee565b5b8160010160009054906101000a900460ff166003811115610f7157610f706133ee565b5b14610fa8576040517f0368368700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160010160006101000a81548160ff02191690836003811115610fd057610fcf6133ee565b5b0217905550600073ffffffffffffffffffffffffffffffffffffffff168160020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036110e95760003373ffffffffffffffffffffffffffffffffffffffff16826002016001015460405161105d9061397d565b60006040518083038185875af1925050503d806000811461109a576040519150601f19603f3d011682016040523d82523d6000602084013e61109f565b606091505b50509050806110e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110da906139ef565b60405180910390fd5b50611197565b8060020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3383600201600101546040518363ffffffff1660e01b8152600401611152929190613a0f565b6020604051808303816000875af1158015611171573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111959190613a64565b505b82600001357ff68aeec8f55d67a9b2cf2b6caea31e11f2c14e09da250170575d63911f26aa6e60405160405180910390a2600080846000013581526020019081526020016000206000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905550506004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090555050600782016000905560088201600090556009820160009055600a820160009055600b820160009055600c820160006101000a81549060ff0219169055505050506112fd612c19565b50565b611308612bc2565b80600001356000801b600080838152602001908152602001600020600001540361135e576040517f5dcaf2d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260000135905060008360400135905060006001600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361144e576040517f0a0c23ee00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060008581526020019081526020016000209050600083036114a957826040517fd9cf167e0000000000000000000000000000000000000000000000000000000081526004016114a091906132f0565b60405180910390fd5b828260000160008282546114bd9190613ac0565b925050819055508060050160010154826000015411156115185781600001546040517fd9cf167e00000000000000000000000000000000000000000000000000000000815260040161150f91906132f0565b60405180910390fd5b6000816005019050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146115ce576115c93330868460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612c32909392919063ffffffff16565b611613565b83341461161257346040517fd9cf167e00000000000000000000000000000000000000000000000000000000815260040161160991906132f0565b60405180910390fd5b5b82600001548360020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16867f7786094a5edc61a0463300b9b97a1b22d338bc800ed33404ba9a3888b71de0fc60405160405180910390a450505050505061168e612c19565b50565b611699612bc2565b80606001356000801b60008083815260200190815260200160002060000154036116ef576040517f5dcaf2d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260600135905060008360000135905060006001600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146117df576040517fb8cee9f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080600087606001358152602001908152602001600020905080600701548310806118115750806005016001015483115b1561185357826040517fd9cf167e00000000000000000000000000000000000000000000000000000000815260040161184a91906132f0565b60405180910390fd5b60008260000154846118659190613af4565b905060008060008781526020019081526020016000206005019050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461192e576119293330848460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612c32909392919063ffffffff16565b611973565b81341461197257346040517fd9cf167e00000000000000000000000000000000000000000000000000000000815260040161196991906132f0565b60405180910390fd5b5b600173__$a132ddf224bcaf7b77631cdf10c807360d$__63cc76f93190918a6040518363ffffffff1660e01b81526004016119af929190613c31565b60006040518083038186803b1580156119c757600080fd5b505af41580156119db573d6000803e3d6000fd5b50505050843373ffffffffffffffffffffffffffffffffffffffff16877f1126836d9a6f07e69d20f7ac2db448d68d9bb24718d7e8e0e85b8cfd96bb04c160405160405180910390a450505050505050611a33612c19565b50565b60045481565b6001602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060020160009054906101000a900460ff16908060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050154905087565b611ae0612dc5565b611aea6000612e4c565b565b60035481565b6000816000013590506000826020016020810190611b109190613658565b90506000806000848152602001908152602001600020905080600c0160009054906101000a900460ff16611b70576040517f3c24fafc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816000015403611c02576040517f0a0c23ee00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085604001351480611c1f575081600501600101548560400135115b15611c655784604001356040517fd9cf167e000000000000000000000000000000000000000000000000000000008152600401611c5c91906132f0565b60405180910390fd5b84604001356005600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050505050565b600080611cd0612f23565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6005602052816000526040600020602052806000526040600020600091509150505481565b611d2a612bc2565b806060016000016020810190611d409190613658565b73ffffffffffffffffffffffffffffffffffffffff16816020016000016020810190611d6c9190613658565b73ffffffffffffffffffffffffffffffffffffffff1603611db9576040517f45b3a4c700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008160e0013511611df7576040517f5fe07c7d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603611e5d576040517f0809490800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b428161010001351015611eae57806101000135426040517ff00605cf000000000000000000000000000000000000000000000000000000008152600401611ea5929190613835565b60405180910390fd5b6000816000013573__$a132ddf224bcaf7b77631cdf10c807360d$__63d81ab44f9091306040518363ffffffff1660e01b8152600401611eef929190613c69565b602060405180830381865af4158015611f0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f309190613ca7565b9050600073__$a132ddf224bcaf7b77631cdf10c807360d$__632296d7e090918484336040518563ffffffff1660e01b8152600401611f729493929190613e46565b60006040518083038186803b158015611f8a57600080fd5b505af4158015611f9e573d6000803e3d6000fd5b50505050600073ffffffffffffffffffffffffffffffffffffffff16826020016000016020810190611fd09190613658565b73ffffffffffffffffffffffffffffffffffffffff160361203a578160200160200135341015612035576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161202c90613eda565b60405180910390fd5b612084565b6120833330846020016020013585602001600001602081019061205d9190613658565b73ffffffffffffffffffffffffffffffffffffffff16612c32909392919063ffffffff16565b5b807f8b82d32987f9a4ae1bc7868a6f104edb711227ec3c9fccb0416a14fcc29bec5a60405160405180910390a2506120ba612c19565b50565b6120c5612bc2565b806000801b6000808381526020019081526020016000206000015403612117576040517f5dcaf2d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000341461215a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161215190613f46565b60405180910390fd5b60006001600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612237576040517f978f045600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028081111561224a576122496133ee565b5b8160020160009054906101000a900460ff16600281111561226e5761226d6133ee565b5b146122c1578060020160009054906101000a900460ff166040517f64b08c060000000000000000000000000000000000000000000000000000000081526004016122b8919061381a565b60405180910390fd5b60008160020160006101000a81548160ff021916908360028111156122e9576122e86133ee565b5b021790555060008060008581526020019081526020016000206005019050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146123db576123d68260020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683600001548360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612f4b9092919063ffffffff16565b61248d565b60003373ffffffffffffffffffffffffffffffffffffffff1683600001546040516124059061397d565b60006040518083038185875af1925050503d8060008114612442576040519150601f19603f3d011682016040523d82523d6000602084013e612447565b606091505b505090508061248b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612482906139ef565b60405180910390fd5b505b8160020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16847f6c2a0bb8117ecfbc53a4385a5421be8eb081718159b9eb3d7c273ecb07fe7cfd60405160405180910390a3505050612500612c19565b50565b60008160000135905060008260200160208101906125219190613658565b90506000806000848152602001908152602001600020905080600c0160009054906101000a900460ff16612581576040517f3c24fafc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816000015403612613576040517f0a0c23ee00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600085604001351480612630575081600501600101548560400135115b156126765784604001356040517fd9cf167e00000000000000000000000000000000000000000000000000000000815260040161266d91906132f0565b60405180910390fd5b84604001356005600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050505050565b60006126e0613013565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff1614801561272e5750825b9050600060018367ffffffffffffffff16148015612763575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015612771575080155b156127a8576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156127f85760018560000160086101000a81548160ff0219169083151502179055505b6128018961303b565b6103e88710612845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161283c90613fd8565b60405180910390fd5b6103e88610612889576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161288090613fd8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16036128f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128ef90614044565b60405180910390fd5b866003819055508560048190555087600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083156129a35760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405161299a91906140bd565b60405180910390a15b505050505050505050565b6129b6612dc5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612a285760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401612a1f919061352f565b60405180910390fd5b612a3181612e4c565b50565b60006020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806005016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250509080600701549080600801549080600901549080600a01549080600b01549080600c0160009054906101000a900460ff1690508c565b6000612bcc6130c1565b90506002816000015403612c0c576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002816000018190555050565b6000612c236130c1565b90506001816000018190555050565b600084905060008173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e86306040518363ffffffff1660e01b8152600401612c749291906137f1565b602060405180830381865afa158015612c91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cb591906140ed565b905082811015612cfe5780836040517f7c8db62f000000000000000000000000000000000000000000000000000000008152600401612cf5929190613835565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040518463ffffffff1660e01b8152600401612d3b9392919061411a565b6020604051808303816000875af1158015612d5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d7e9190613a64565b612dbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612db49061419d565b60405180910390fd5b505050505050565b612dcd6130e9565b73ffffffffffffffffffffffffffffffffffffffff16612deb611cc5565b73ffffffffffffffffffffffffffffffffffffffff1614612e4a57612e0e6130e9565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401612e41919061352f565b60405180910390fd5b565b6000612e56612f23565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b60008390508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401612f8b929190613a0f565b6020604051808303816000875af1158015612faa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fce9190613a64565b61300d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016130049061419d565b60405180910390fd5b50505050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6130436130f1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036130b55760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016130ac919061352f565b60405180910390fd5b6130be81612e4c565b50565b60007f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00905090565b600033905090565b6130f9613131565b61312f576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600061313b613013565b60000160089054906101000a900460ff16905090565b600080fd5b600080fd5b60006040828403121561317157613170613156565b5b81905092915050565b6000604082840312156131905761318f613151565b5b600061319e8482850161315b565b91505092915050565b6000604082840312156131bd576131bc613156565b5b81905092915050565b6000604082840312156131dc576131db613151565b5b60006131ea848285016131a7565b91505092915050565b60006020828403121561320957613208613156565b5b81905092915050565b60006020828403121561322857613227613151565b5b6000613236848285016131f3565b91505092915050565b60006060828403121561325557613254613156565b5b81905092915050565b60006060828403121561327457613273613151565b5b60006132828482850161323f565b91505092915050565b600060a082840312156132a1576132a0613156565b5b81905092915050565b600060a082840312156132c0576132bf613151565b5b60006132ce8482850161328b565b91505092915050565b6000819050919050565b6132ea816132d7565b82525050565b600060208201905061330560008301846132e1565b92915050565b6000819050919050565b61331e8161330b565b811461332957600080fd5b50565b60008135905061333b81613315565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061336c82613341565b9050919050565b61337c81613361565b811461338757600080fd5b50565b60008135905061339981613373565b92915050565b600080604083850312156133b6576133b5613151565b5b60006133c48582860161332c565b92505060206133d58582860161338a565b9150509250929050565b6133e88161330b565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061342e5761342d6133ee565b5b50565b600081905061343f8261341d565b919050565b600061344f82613431565b9050919050565b61345f81613444565b82525050565b61346e81613361565b82525050565b600060e082019050613489600083018a6132e1565b61349660208301896133df565b6134a36040830188613456565b6134b06060830187613465565b6134bd6080830186613465565b6134ca60a08301856132e1565b6134d760c08301846132e1565b98975050505050505050565b6000606082840312156134f9576134f8613156565b5b81905092915050565b60006060828403121561351857613517613151565b5b6000613526848285016134e3565b91505092915050565b60006020820190506135446000830184613465565b92915050565b6000610140828403121561356157613560613156565b5b81905092915050565b6000610140828403121561358157613580613151565b5b600061358f8482850161354a565b91505092915050565b6000602082840312156135ae576135ad613151565b5b60006135bc8482850161332c565b91505092915050565b6135ce816132d7565b81146135d957600080fd5b50565b6000813590506135eb816135c5565b92915050565b6000806000806080858703121561360b5761360a613151565b5b60006136198782880161338a565b945050602061362a8782880161338a565b935050604061363b878288016135dc565b925050606061364c878288016135dc565b91505092959194509250565b60006020828403121561366e5761366d613151565b5b600061367c8482850161338a565b91505092915050565b60048110613696576136956133ee565b5b50565b60008190506136a782613685565b919050565b60006136b782613699565b9050919050565b6136c7816136ac565b82525050565b6136d681613361565b82525050565b6136e5816132d7565b82525050565b60408201600082015161370160008501826136cd565b50602082015161371460208501826136dc565b50505050565b60008115159050919050565b61372f8161371a565b82525050565b60006101c08201905061374b600083018f6133df565b613758602083018e6136be565b613765604083018d613465565b613772606083018c6136eb565b61377f60a083018b613465565b61378c60c083018a6136eb565b61379a6101008301896132e1565b6137a86101208301886132e1565b6137b66101408301876132e1565b6137c46101608301866132e1565b6137d26101808301856132e1565b6137e06101a0830184613726565b9d9c50505050505050505050505050565b60006040820190506138066000830185613465565b6138136020830184613465565b9392505050565b600060208201905061382f6000830184613456565b92915050565b600060408201905061384a60008301856132e1565b61385760208301846132e1565b9392505050565b61386781613361565b82525050565b613876816132d7565b82525050565b600060c082019050613891600083018961385e565b61389e602083018861385e565b6138ab604083018761386d565b6138b8606083018661386d565b6138c5608083018561386d565b6138d260a083018461385e565b979650505050505050565b600060e0820190506138f2600083018a61385e565b6138ff602083018961385e565b61390c604083018861385e565b613919606083018761386d565b613926608083018661386d565b61393360a083018561386d565b61394060c083018461385e565b98975050505050505050565b600081905092915050565b50565b600061396760008361394c565b915061397282613957565b600082019050919050565b60006139888261395a565b9150819050919050565b600082825260208201905092915050565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b60006139d9601083613992565b91506139e4826139a3565b602082019050919050565b60006020820190508181036000830152613a08816139cc565b9050919050565b6000604082019050613a246000830185613465565b613a3160208301846132e1565b9392505050565b613a418161371a565b8114613a4c57600080fd5b50565b600081519050613a5e81613a38565b92915050565b600060208284031215613a7a57613a79613151565b5b6000613a8884828501613a4f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613acb826132d7565b9150613ad6836132d7565b9250828201905080821115613aee57613aed613a91565b5b92915050565b6000613aff826132d7565b9150613b0a836132d7565b9250828203905081811115613b2257613b21613a91565b5b92915050565b8082525050565b6000613b3e60208401846135dc565b905092915050565b613b4f816132d7565b82525050565b6000613b64602084018461338a565b905092915050565b613b7581613361565b82525050565b6000613b8a602084018461332c565b905092915050565b613b9b8161330b565b82525050565b60a08201613bb26000830183613b2f565b613bbf6000850182613b46565b50613bcd6020830183613b55565b613bda6020850182613b6c565b50613be86040830183613b55565b613bf56040850182613b6c565b50613c036060830183613b7b565b613c106060850182613b92565b50613c1e6080830183613b2f565b613c2b6080850182613b46565b50505050565b600060c082019050613c466000830185613b28565b613c536020830184613ba1565b9392505050565b613c638161330b565b82525050565b6000604082019050613c7e6000830185613c5a565b613c8b602083018461385e565b9392505050565b600081519050613ca181613315565b92915050565b600060208284031215613cbd57613cbc613151565b5b6000613ccb84828501613c92565b91505092915050565b8082525050565b600082905092915050565b60408201613cf76000830183613b55565b613d046000850182613b6c565b50613d126020830183613b2f565b613d1f6020850182613b46565b50505050565b600081359050613d3481613a38565b92915050565b6000613d496020840184613d25565b905092915050565b613d5a8161371a565b82525050565b6101408201613d726000830183613b7b565b613d7f6000850182613b92565b50613d8d6020830183613cdb565b613d9a6020850182613ce6565b50613da86060830183613cdb565b613db56060850182613ce6565b50613dc360a0830183613b55565b613dd060a0850182613b6c565b50613dde60c0830183613b55565b613deb60c0850182613b6c565b50613df960e0830183613b2f565b613e0660e0850182613b46565b50613e15610100830183613b2f565b613e23610100850182613b46565b50613e32610120830183613d3a565b613e40610120850182613d51565b50505050565b60006101a082019050613e5c6000830187613cd4565b613e696020830186613d60565b613e77610160830185613c5a565b613e8561018083018461385e565b95945050505050565b7f4e6f7420656e6f75676820657468657200000000000000000000000000000000600082015250565b6000613ec4601083613992565b9150613ecf82613e8e565b602082019050919050565b60006020820190508181036000830152613ef381613eb7565b9050919050565b7f556e65787065637465642045746865722073656e740000000000000000000000600082015250565b6000613f30601583613992565b9150613f3b82613efa565b602082019050919050565b60006020820190508181036000830152613f5f81613f23565b9050919050565b7f73656c6c65724665652068617320746f20626520736d616c6c6572207468616e60008201527f206d617846656500000000000000000000000000000000000000000000000000602082015250565b6000613fc2602783613992565b9150613fcd82613f66565b604082019050919050565b60006020820190508181036000830152613ff181613fb5565b9050919050565b7f696e76616c696420747265617375727920616464726573730000000000000000600082015250565b600061402e601883613992565b915061403982613ff8565b602082019050919050565b6000602082019050818103600083015261405d81614021565b9050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b60006140a76140a261409d84614064565b614082565b61406e565b9050919050565b6140b78161408c565b82525050565b60006020820190506140d260008301846140ae565b92915050565b6000815190506140e7816135c5565b92915050565b60006020828403121561410357614102613151565b5b6000614111848285016140d8565b91505092915050565b600060608201905061412f6000830186613465565b61413c6020830185613465565b61414960408301846132e1565b949350505050565b7f4661696c656420746f207472616e736665722066726f6d000000000000000000600082015250565b6000614187601783613992565b915061419282614151565b602082019050919050565b600060208201905081810360008301526141b68161417a565b905091905056fea2646970667358221220fa5ecc9f47aece8d5394b33038b6ea639a05f595d3f6dc87cf08444233757a5764736f6c63430008140033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "provided";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "expectedExpiry";
            readonly type: "uint256";
        }];
        readonly name: "BidAlreadyExpired";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "BidAlreadyPlaced";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "BidDoesNotExist";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "BidNotAllowed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "enum IAtomicSwapBase.BidStatus";
            readonly name: "status";
            readonly type: "uint8";
        }];
        readonly name: "BidNotInPlacedStatus";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "contractAddress";
            readonly type: "address";
        }];
        readonly name: "InvalidContractAddress";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "provided";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "maximum";
            readonly type: "uint256";
        }];
        readonly name: "InvalidExpirationTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidInitialization";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidMinimumBidLimit";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "MismatchedBidAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NoBidPlaced";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "allowance";
            readonly type: "uint256";
        }];
        readonly name: "NotAllowedTransferAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "real";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "expected";
            readonly type: "uint256";
        }];
        readonly name: "NotEnoughFund";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotInitializing";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "OrderAlreadyCompleted";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "OrderAlreadyExists";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "OrderDoesNotExist";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "OrderNotAllowTake";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "OwnableInvalidOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "OwnableUnauthorizedAccount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ReentrancyGuardReentrantCall";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "caller";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "expected";
            readonly type: "address";
        }];
        readonly name: "UnauthorizedAcceptAction";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnauthorizedCancelAction";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnauthorizedSender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnauthorizedTakeAction";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnsupportedTokenPair";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "orderID";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "AcceptedBid";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "id";
            readonly type: "bytes32";
        }];
        readonly name: "AtomicSwapOrderCanceled";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "id";
            readonly type: "bytes32";
        }];
        readonly name: "AtomicSwapOrderCreated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "maker";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "taker";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "id";
            readonly type: "bytes32";
        }];
        readonly name: "AtomicSwapOrderTook";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "orderID";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }];
        readonly name: "CanceledBid";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint64";
            readonly name: "version";
            readonly type: "uint64";
        }];
        readonly name: "Initialized";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "orderID";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "PlacedBid";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "orderID";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "ReceivedNewBid";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "orderID";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "UpdatedBid";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "orderID";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "bidder";
                readonly type: "address";
            }];
            readonly internalType: "struct IAtomicSwapBase.AcceptBidMsg";
            readonly name: "acceptBidMsg";
            readonly type: "tuple";
        }];
        readonly name: "acceptBid";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "orderID";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "bidder";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }];
            readonly internalType: "struct IAtomicSwapBase.CounterOfferMsg";
            readonly name: "counterOfferMsg";
            readonly type: "tuple";
        }];
        readonly name: "acceptCountOfffer";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "bids";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32";
            readonly name: "order";
            readonly type: "bytes32";
        }, {
            readonly internalType: "enum IAtomicSwapBase.BidStatus";
            readonly name: "status";
            readonly type: "uint8";
        }, {
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "bidderReceiver";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "receiveTimestamp";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "expireTimestamp";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "buyerFeeRate";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_orderID";
            readonly type: "bytes32";
        }];
        readonly name: "cancelBid";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "orderID";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct IAtomicSwapBase.CancelSwapMsg";
            readonly name: "cancelswap";
            readonly type: "tuple";
        }];
        readonly name: "cancelSwap";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "orderID";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "bidder";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }];
            readonly internalType: "struct IAtomicSwapBase.CounterOfferMsg";
            readonly name: "counterOfferMsg";
            readonly type: "tuple";
        }];
        readonly name: "counteroffer";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "counteroffers";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_admin";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_treasury";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_sellerFee";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_buyerFee";
            readonly type: "uint256";
        }];
        readonly name: "initialize";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "uuid";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IAtomicSwapBase.Coin";
                readonly name: "sellToken";
                readonly type: "tuple";
            }, {
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IAtomicSwapBase.Coin";
                readonly name: "buyToken";
                readonly type: "tuple";
            }, {
                readonly internalType: "address";
                readonly name: "maker";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "desiredTaker";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "minBidAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "expireAt";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "acceptBid";
                readonly type: "bool";
            }];
            readonly internalType: "struct IAtomicSwapBase.MakeSwapMsg";
            readonly name: "makeswap";
            readonly type: "tuple";
        }];
        readonly name: "makeSwap";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "bidAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "bidder";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "bidderReceiver";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "orderID";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "expireTimestamp";
                readonly type: "uint256";
            }];
            readonly internalType: "struct IAtomicSwapBase.PlaceBidMsg";
            readonly name: "placeBidMsg";
            readonly type: "tuple";
        }];
        readonly name: "placeBid";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "sellerFeeRate";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly name: "swapOrder";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "id";
            readonly type: "bytes32";
        }, {
            readonly internalType: "enum IAtomicSwapBase.OrderStatus";
            readonly name: "status";
            readonly type: "uint8";
        }, {
            readonly internalType: "address";
            readonly name: "maker";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }];
            readonly internalType: "struct IAtomicSwapBase.Coin";
            readonly name: "sellToken";
            readonly type: "tuple";
        }, {
            readonly internalType: "address";
            readonly name: "taker";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }];
            readonly internalType: "struct IAtomicSwapBase.Coin";
            readonly name: "buyToken";
            readonly type: "tuple";
        }, {
            readonly internalType: "uint256";
            readonly name: "minBidAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "createdAt";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "canceledAt";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "completedAt";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "expiredAt";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "acceptBid";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "orderID";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "takerReceiver";
                readonly type: "address";
            }];
            readonly internalType: "struct IAtomicSwapBase.TakeSwapMsg";
            readonly name: "takeswap";
            readonly type: "tuple";
        }];
        readonly name: "takeSwap";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "orderID";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "bidder";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "addition";
                readonly type: "uint256";
            }];
            readonly internalType: "struct IAtomicSwapBase.UpdateBidMsg";
            readonly name: "updateBidMsg";
            readonly type: "tuple";
        }];
        readonly name: "updateBid";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }];
    static createInterface(): InchainAtomicSwapInterface;
    static connect(address: string, runner?: ContractRunner | null): InchainAtomicSwap;
}
export interface InchainAtomicSwapLibraryAddresses {
    ["contracts/abstracts/libs/AtomicSwapHelper.sol:AtomicSwapHelper"]: string;
}
export {};
